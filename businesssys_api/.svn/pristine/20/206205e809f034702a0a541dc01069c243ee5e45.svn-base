<?php

namespace app\admin\controller;


use app\util\ReturnCode;
use app\model\Attachment;

class Index extends Base {
    public function index() {
        return json(['welcome']);
    }

    //@author 赵光帅
    /**
     * @api {post} admin/Index/fileUpload 图片上传[admin/Index/fileUpload]
     * @apiVersion 1.0.0
     * @apiName fileUpload
     * @apiGroup Index
     * @apiSampleRequest admin/Index/fileUpload
     *
     *
     * @apiParam {file}  pic    文件文件
     *
     * @apiSuccess {string}  file_url    文件链接地址
     * @apiSuccess {string}  old_name    文件原始名称
     * @apiSuccess {int}  id    附件表主键id
     * @apiSuccess {string}  thum_path    缩略图的地址(上传图片才返回该字段)
     */
    public function fileUpload(){
        $file = request()->file('pic');
        if(empty($file)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '文件不能为空!');
        $path = config('uploadFile.img_path');
        $info = $file->validate(['size'=>9437184,'ext'=> config('uploadFile.file_type')])->move($path,true,false);
        //图片地址
        $filePath = config('uploadFile.img_path').DS.$info->getSaveName();
        if($info){
            //图片原始名称
            $imgInfo['name'] = $info->getInFo()['name'];
            //新的图片名称
            $imgInfo['savename'] = $info->getFilename();
            //文件大小
            $imgInfo['filesize'] = $info->getInFo()['size'];
            //文件后缀
            $imgInfo['ext'] = $info->getExtension();
            if(in_array($imgInfo['ext'],['png','gif','jpeg','jpg'])){
                //缩略图的上传地址
                $date = date('Ymd',time());
                $thumPath = config('uploadFile.thum_path').DS.$date;
                if(!file_exists($thumPath))
                {
                    //检查是否有该文件夹，如果没有就创建，并给予最高权限
                    mkdir($thumPath, 0700);
                }
                //缩略图
                $image = \think\Image::open($filePath);
                // 按照原图的比例生成一个最大为150*150的缩略图并保存为thumb.png
                $image->thumb(100, 100)->save($thumPath.DS.$imgInfo['savename']);
                //缩略图片的地址
                $imgInfo['thum1'] = config('uploadFile.thum_lujing').DS.$imgInfo['savename'];
                //图片宽
                $imgInfo['imagewidth'] = getimagesize($filePath)[0];
                //图片高
                $imgInfo['imageheight'] = getimagesize($filePath)[1];
                //mime类型
                $imgInfo['mimetype'] = getimagesize($filePath)['mime'];
            }
            //文件类型
            $imgInfo['imagetype'] = $info->getInFo()['type'];
            //获取上传文件的hash散列值
            $imgInfo['md5'] = $file->hash('md5');
            $imgInfo['sha1'] = $file->hash('sha1');
            //路径
            $imgInfo['path'] = config('uploadFile.img_path');
            //连接地址
            $imgInfo['url'] = DS .'uploads'.DS .$info->getSaveName();
            //上传时间
            $imgInfo['create_time'] = time();
            try{
                $resImg = Attachment::create($imgInfo);
                //上传成功就返回附件表的该文件对应的主键id,以及文件地址
                if(in_array($imgInfo['ext'],['png','gif','jpeg','jpg'])){
                    return $this->buildSuccess(['id' => $resImg->id,'url' =>config('uploadFile.url').$imgInfo['url'],'name' => $imgInfo['name'],'thum_path' => config('uploadFile.thum_url').DS.$imgInfo['savename']]);
                }
                return $this->buildSuccess(['id' => $resImg->id,'url' =>config('uploadFile.url').$imgInfo['url'],'name' => $imgInfo['name']]);
            }catch (\Exception $e){
                return $this->buildFailed(ReturnCode::FILE_SAVE_ERROR, '文件信息存储失败');
            }
        }else{
            // 上传失败获取错误信息
            return $this->buildFailed(ReturnCode::FILE_SAVE_ERROR, $file->getError());
        }


    }

    
}
