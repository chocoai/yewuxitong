<?php
/**
 * Created by PhpStorm.
 * User: 赵光帅
 * Date: 2018/5/9
 * Time: 13:46
 */
namespace app\admin\controller;

use app\util\ReturnCode;
use app\util\OrderComponents;
use app\model\Order;
use app\model\SystemUser;
use app\model\OrderCostRecord;
use app\model\OrderBankRecord;
use think\Db;
use app\model\OrderGuarantee;
use app\model\Dictionary;



class Financial extends Base {
    /**
     * @api {post} admin/Financial/bookedList 财务费用入账列表[admin/Financial/bookedList]
     * @apiVersion 1.0.0
     * @apiName bookedList
     * @apiGroup Financial
     * @apiSampleRequest admin/Financial/bookedList
     *
     *
     * @apiParam {int} create_uid    人员id
     * @apiParam {int} subordinates    1含下属 0不含下属
     * @apiParam {int} type    订单类型
     * @apiParam {int}  start_time   开始时间
     * @apiParam {int}  end_time   结束时间
     * @apiParam {int}  guarantee_fee_status   收费状态 1未收齐 2已收齐
     * @apiParam {int} search_text    关键字搜索
     * @apiParam {int} page    页码
     * @apiParam {int} limit    条数
     *
     * @apiSuccessExample {json} 返回数据示例:
     * HTTP/1.1 200 OK
     * "data": {
     *       "total": 2,
     *       "per_page": 20,
     *       "current_page": 1,
     *       "last_page": 1,
     *       "data": [
     *           {
     *           "order_sn": "JYDB2018050096",
     *           "finance_sn": "100000047",
     *           "type": "JYDB",
     *           "name": "夏丽平",
     *           "estate_name": "国际新城",
     *           "estate_owner": null,
     *           "ac_guarantee_fee_time": "2018-05-08 14:50:07",
     *           "guarantee_fee": "2.00",
     *           "ac_guarantee_fee": "0.00",
     *           "guarantee_fee_status": 1
     *           },
     *           {
     *           "order_sn": "JYDB2018050095",
     *           "finance_sn": "100000047",
     *           "type": "JYDB",
     *           "name": "夏丽平",
     *           "estate_name": "国际新城",
     *           "estate_owner": null,
     *           "ac_guarantee_fee_time": "2018-05-08 14:46:58",
     *           "guarantee_fee": "2.00",
     *           "ac_guarantee_fee": "0.00",
     *           "guarantee_fee_status": 1
     *           }
     *       ]
     *   }
     * @apiSuccess {int} total    总条数
     * @apiSuccess {int} per_page    每页显示的条数
     * @apiSuccess {int} current_page    当前页
     * @apiSuccess {int} last_page    总页数
     * @apiSuccess {string} order_sn    业务单号
     * @apiSuccess {int} finance_sn    财务序号
     * @apiSuccess {int} type     订单类型
     * @apiSuccess {string} name    理财经理
     * @apiSuccess {string} estate_name    房产名称
     * @apiSuccess {string} estate_owner    业主姓名
     * @apiSuccess {string} ac_guarantee_fee_time    入账时间
     * @apiSuccess {float} guarantee_fee    应收金额
     * @apiSuccess {float} ac_guarantee_fee    实收金额
     * @apiSuccess {int} guarantee_fee_status    收费状态 1未收齐 2已收齐
     */

    public function bookedList(){
        $createUid = input('create_uid')?:0;
        $subordinates = input('subordinates')?:0;
        $type = input('type');
        $startTime = input('start_time');
        $endTime = input('end_time');
        $guarantee_fee_status = input('guarantee_fee_status')?:0;
        $searchText = trim(input('search_text'));
        $page = input('page') ? input('page') : 1;
        $pageSize = input('limit') ? input('limit') : config('apiBusiness.ADMIN_LIST_DEFAULT');
        $userId = $this->userInfo['id'];
        //$userId = 2;
        $map = [];
        //用户判断//
        if(!empty($createUid)){
            $userStr = SystemUser::orderCheckPower($userId,$createUid,$subordinates);
            //return json($userStr);
            if($userStr !== false)
                $map['x.financing_manager_id']=['in', $userStr];
            else
                return $this->buildSuccess([]);
        }
        if($startTime && $endTime){
            if($startTime > $endTime){
                $map['n.ac_guarantee_fee_time'] = array(array('egt', $endTime), array('elt', $startTime));
            }else{
                $map['n.ac_guarantee_fee_time'] = array(array('egt', $startTime), array('elt', $endTime));
            }
        }elseif($startTime){
            $map['n.ac_guarantee_fee_time'] = ['egt',$startTime];
        }elseif($endTime){
            $map['n.ac_guarantee_fee_time'] = ['elt',$endTime];
        }
        $type && $map['x.type'] = $type;
        $guarantee_fee_status && $map['n.guarantee_fee_status'] = $guarantee_fee_status;
        $searchText && $map['y.estate_name|x.order_sn|x.finance_sn']=['like', "%{$searchText}%"];
        $map['x.delete_time'] = NULL;
        $map['x.status'] = 1;
        try{
            $resInfo = Order::costList($map,$page,$pageSize);
            $newStageArr =  dictionary_reset((new Dictionary)->getDictionaryByType('ORDER_TYPE'));
            if($resInfo){
                foreach($resInfo['data'] as &$val){
                    $val['type'] = $newStageArr[$val['type']] ? $newStageArr[$val['type']]:'';
                    if($val['ac_guarantee_fee_time']){
                        $val['ac_guarantee_fee_time'] = date('Y-m-d H:i:s',$val['ac_guarantee_fee_time']);
                    }

                }
            }
            return $this->buildSuccess($resInfo);
        }catch (\Exception $e){
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '查询失败!');
        }
    }

    /**
     * @api {post} admin/Financial/addBooksWater 增加财务入账流水[admin/Financial/addBooksWater]
     * @apiVersion 1.0.0
     * @apiName addBooksWater
     * @apiGroup Financial
     * @apiSampleRequest admin/Financial/addBooksWater
     *
     * @apiParam {string}  order_sn   订单编号
     * @apiParam {int}  finance_sn   财务序号
     * @apiParam {float}  guarantee_fee  担保费
     * @apiParam {float}  fee   手续费
     * @apiParam {float}  self_financing 自筹金额
     * @apiParam {float}  short_loan_interest 短贷利息
     * @apiParam {float}  return_money 赎楼返还款
     * @apiParam {float}  default_interest 罚息
     * @apiParam {float}  overdue_money 逾期金额
     * @apiParam {float}  other_money 其它
     * @apiParam {string}  remark   备注说明
     * @apiParam {int}  guarantee_fee_status   收费状态 1未收齐 2已收齐
     *
     */

    public function addBooksWater(){
        $waterInfo['order_sn'] = input('order_sn');
        $waterInfo['finance_sn'] = input('finance_sn');
        $waterInfo['guarantee_fee'] = input('guarantee_fee')?:0;
        $waterInfo['fee'] = input('fee')?:0;
        $waterInfo['self_financing'] = input('self_financing')?:0;
        $waterInfo['short_loan_interest'] = input('short_loan_interest')?:0;
        $waterInfo['return_money'] = input('return_money')?:0;
        $waterInfo['default_interest'] = input('default_interest')?:0;
        $waterInfo['overdue_money'] = input('overdue_money')?:0;
        $waterInfo['other_money'] = input('other_money')?:0;
        $waterInfo['remark'] = input('remark');
        $guarantee_fee_status = input('guarantee_fee_status');
        if($waterInfo['guarantee_fee'] == 0 && $waterInfo['fee'] == 0 && $waterInfo['self_financing'] == 0 && $waterInfo['short_loan_interest'] == 0 && $waterInfo['return_money'] == 0 && $waterInfo['default_interest'] == 0 && $waterInfo['overdue_money'] == 0 && $waterInfo['other_money'] == 0) return $this->buildFailed(ReturnCode::UPDATE_FAILED, '流入入账不能为空!');
        //验证器验证参数
        $valiDate = validate('FinanVail');
        if(!$valiDate->check($waterInfo)){
            return $this->buildFailed(ReturnCode::EMPTY_PARAMS, $valiDate->getError());
        }
        // 启动事务
        Db::startTrans();
        try{
            $total_money = $waterInfo['guarantee_fee']+$waterInfo['fee']+$waterInfo['self_financing']+$waterInfo['short_loan_interest']+
                $waterInfo['return_money']+$waterInfo['default_interest']+$waterInfo['overdue_money']+$waterInfo['other_money'];
            $waterInfo['total_money'] = $total_money;
            $waterInfo['create_time'] = time();
            $waterInfo['create_uid'] = $this->userInfo['id'];
            //return json($waterInfo);
            //添加入账流水
            OrderCostRecord::create($waterInfo);
            //更改担保赎楼信息表信息
            $guaranteeInfo = OrderGuarantee::get(['order_sn' => $waterInfo['order_sn']]);
            $guaranteeInfo->ac_guarantee_fee = $guaranteeInfo['ac_guarantee_fee'] +$waterInfo['guarantee_fee'];
            $guaranteeInfo->ac_fee = $guaranteeInfo['ac_fee'] +$waterInfo['fee'];
            $guaranteeInfo->ac_self_financing = $guaranteeInfo['ac_self_financing'] +$waterInfo['self_financing'];
            $guaranteeInfo->ac_short_loan_interest = $guaranteeInfo['ac_short_loan_interest'] +$waterInfo['short_loan_interest'];
            $guaranteeInfo->ac_return_money = $guaranteeInfo['ac_return_money'] +$waterInfo['return_money'];
            $guaranteeInfo->ac_default_interest = $guaranteeInfo['ac_default_interest'] +$waterInfo['default_interest'];
            $guaranteeInfo->ac_overdue_money = $guaranteeInfo['ac_overdue_money'] +$waterInfo['overdue_money'];
            $guaranteeInfo->ac_other_money = $guaranteeInfo['ac_other_money'] +$waterInfo['other_money'];
            $guaranteeInfo->ac_guarantee_fee_time = time();
            $guaranteeInfo->update_time = time();
            if($guarantee_fee_status == 2) //代表已经收齐
                $guaranteeInfo->guarantee_fee_status = 2;
            $guaranteeInfo->save();
            /*添加订单操作记录*/
            //根据订单号查询出订单状态
            $stageInfo = Order::getOne(['order_sn' => $waterInfo['order_sn']],'stage');
            if(strlen($stageInfo['stage']) == 4){
                $operate = $stage = show_status_name($stageInfo['stage'],'ORDER_JYDB_STATUS');
            }else{
                $operate = $stage = show_status_name($stageInfo['stage'],'ORDER_JYDB_FINC_STATUS');
            }

            $operate_node = $this->userInfo['name']."添加入账流水";
            $operate_det = $this->userInfo['deptname'].'=>'.$this->userInfo['name']."给订单添加入账流水";
            $operate_reason = '';
            $stage_code = $stageInfo['stage'];
            $operate_table = 'order';
            OrderComponents::addOrderLog($this->userInfo,$waterInfo['order_sn'], $stage, $operate,$operate_node,$operate_det,$operate_reason,$stage_code,$operate_table);
            // 提交事务
            Db::commit();
            return $this->buildSuccess('入账流水添加成功');
        }catch (\Exception $e){
            // 回滚事务
            Db::rollback();
            return $this->buildFailed(ReturnCode::UPDATE_FAILED, '入账流水添加失败');
        }
    }

    /**
     * @api {post} admin/Financial/showBooksDetail 财务入账流水明细[admin/Financial/showBooksDetail]
     * @apiVersion 1.0.0
     * @apiName showBooksDetail
     * @apiGroup Financial
     * @apiSampleRequest admin/Financial/showBooksDetail
     *
     *
     * @apiParam {string}  order_sn   订单编号
     *
     * @apiSuccessExample {json} 返回数据示例:
     * HTTP/1.1 200 OK
     * {
     *       "code": 1,
     *       "msg": "操作成功",
     *        data": {
     *           "orderinfo": {
     *               "order_sn": "JYDB2018050137123456",
     *               "type": "JYDB",
     *               "name": "夏丽平",
     *               "deptname": "财务中心",
     *               "finance_sn": "100000048",
     *               "self_financing": "2.00",
     *               "guarantee_fee": "2.00",
     *               "fee": "2.00",
     *               "guarantee_fee_status": 2,
     *               "receivable_amount": 4,
     *               "shiShouMoney": 3665.1,
     *               "danBaoMoney": 3500
     *             },
     *           "booksWaterInfo": [
     *               {
     *               "total_money": "1634.70",
     *               "remark": "测试测试测试测试测试",
     *               "create_time": "2018-05-10 10:34:30",
     *               "operation_name": "杜欣",
     *               "arrinfo": [
     *                   {
     *                   "names": "担保费",
     *                   "money": "1500.00"
     *                   },
     *                   {
     *                   "names": "手续费",
     *                   "money": "-13.50"
     *                   },
     *                   {
     *                   "names": "自筹金额",
     *                   "money": "100.50"
     *                   },
     *                   {
     *                   "names": "短贷利息",
     *                   "money": "200.30"
     *                   },
     *                   {
     *                   "names": "赎楼返还款",
     *                   "money": "-152.60"
     *                   }
     *                 ]
     *               },
     *               {
     *               "total_money": "1015.20",
     *               "remark": "测试测试测试测试测试从",
     *               "create_time": "2018-05-10 10:28:58",
     *               "operation_name": "杜欣",
     *               "arrinfo": [
     *                   {
     *                   "names": "担保费",
     *                   "money": "1000.00"
     *                   },
     *                   {
     *                   "names": "手续费",
     *                   "money": "-15.00"
     *                   },
     *                   {
     *                   "names": "自筹金额",
     *                   "money": "30.00"
     *                   },
     *                   {
     *                   "names": "短贷利息",
     *                   "money": "-12.30"
     *                   },
     *                   {
     *                   "names": "赎楼返还款",
     *                   "money": "12.50"
     *                   }
     *                 ]
     *               },
     *            ]
     *        }
     *   }
     *
     * @apiSuccess {string} order_sn    订单编号
     * @apiSuccess {string} type    订单类型
     * @apiSuccess {string} name    理财经理
     * @apiSuccess {string} deptname    所在部门
     * @apiSuccess {int}   finance_sn  财务序号
     * @apiSuccess {float} self_financing    自筹金额
     * @apiSuccess {float} guarantee_fee    应收担保费
     * @apiSuccess {float} fee    应收手续费
     * @apiSuccess {int}   guarantee_fee_status  担保费是否收齐 1未收齐 2已收齐
     * @apiSuccess {float} receivable_amount    应收金额
     * @apiSuccess {float} shiShouMoney    实收金额总计
     * @apiSuccess {float} danBaoMoney    担保费总计
     * @apiSuccess {float} total_money    入账金额
     * @apiSuccess {string} remark    备注说明
     * @apiSuccess {string} create_time    入账时间
     * @apiSuccess {string} operation_name    操作人
     * @apiSuccess {int}   names   费用项目
     * @apiSuccess {float} money    费用金额
     */

    public function showBooksDetail(){
        $orderSn = input('order_sn');
        if(empty($orderSn)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '订单编号不能为空!');
        try{
            $returnInfo = [];
            $orderInfo = Order::booksDetail($orderSn);
            $newStageArr =  dictionary_reset((new Dictionary)->getDictionaryByType('ORDER_TYPE'));
            if($orderInfo){
                $orderInfo['type'] = $newStageArr[$orderInfo['type']] ? $newStageArr[$orderInfo['type']]:'';
            }
            $orderInfo['receivable_amount'] = $orderInfo['guarantee_fee'] + $orderInfo['fee'];
            $field = 'total_money,guarantee_fee,fee,self_financing,short_loan_interest,return_money,default_interest,overdue_money,other_money,remark,create_time,create_uid';
            $booksWaterInfo = OrderCostRecord::getAll(['order_sn' => $orderSn],$field,'create_time desc');
            $fanHuiInfo = self::addFansDanbao($booksWaterInfo);
            $orderInfo['shiShouMoney'] = $fanHuiInfo['a'];
            $orderInfo['danBaoMoney'] = $fanHuiInfo['b'];
            $returnInfo['orderinfo'] = $orderInfo; //订单信息
            $returnInfo['booksWaterInfo'] = $fanHuiInfo['c'];//流水明细
            return $this->buildSuccess($returnInfo);
        }catch (\Exception $e){
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '查询失败!');
        }

    }

    /*
     * 重新组装流水明细
     * @Param {array}  $booksWaterInfo   数据
     * */
    protected function addFansDanbao($booksWaterInfo){
        $shiShouMoney = '';
        $danBaoMoney = '';
        foreach ($booksWaterInfo as $k => $v){
            $shiShouMoney += $v['total_money'];
            $danBaoMoney += $v['guarantee_fee'];
            $moneyArr = [];
            $booksWaterInfo[$k]['operation_name'] = SystemUser::where(['id' => $v['create_uid']])->value('name');
            unset($booksWaterInfo[$k]['create_uid']);
            if(isset($v['guarantee_fee']) && !empty($v['guarantee_fee']) && $v['guarantee_fee'] != 0.00){
                $moneyArr[] = array('names' => '担保费','money' => $v['guarantee_fee']);
            }
            unset($booksWaterInfo[$k]['guarantee_fee']);
            if(isset($v['fee']) && !empty($v['fee']) && $v['fee'] != 0.00){
                $moneyArr[] = array('names' => '手续费','money' => $v['fee']);
            }
            unset($booksWaterInfo[$k]['fee']);
            if(isset($v['self_financing']) && !empty($v['self_financing']) && $v['self_financing'] != 0.00){
                $moneyArr[] = array('names' => '自筹金额','money' => $v['self_financing']);
            }
            unset($booksWaterInfo[$k]['self_financing']);
            if(isset($v['short_loan_interest']) && !empty($v['short_loan_interest']) && $v['short_loan_interest'] != 0.00){
                $moneyArr[] = array('names' => '短贷利息','money' => $v['short_loan_interest']);
            }
            unset($booksWaterInfo[$k]['short_loan_interest']);
            if(isset($v['return_money']) && !empty($v['return_money']) && $v['return_money'] != 0.00){
                $moneyArr[] = array('names' => '赎楼返还款','money' => $v['return_money']);
            }
            unset($booksWaterInfo[$k]['return_money']);
            if(isset($v['default_interest']) && !empty($v['default_interest']) && $v['default_interest'] != 0.00){
                $moneyArr[] = array('names' => '罚息','money' => $v['default_interest']);
            }
            unset($booksWaterInfo[$k]['default_interest']);
            if(isset($v['overdue_money']) && !empty($v['overdue_money']) && $v['overdue_money'] != 0.00){
                $moneyArr[] = array('names' => '逾期金额','money' => $v['overdue_money']);
            }
            unset($booksWaterInfo[$k]['overdue_money']);
            if(isset($v['other_money']) && !empty($v['other_money']) && $v['other_money'] != 0.00){
                $moneyArr[] = array('names' => '其它','money' => $v['other_money']);
            }
            unset($booksWaterInfo[$k]['other_money']);
            $booksWaterInfo[$k]['arrinfo'] = $moneyArr;
        }
        $returnInfo['a'] = $shiShouMoney;
        $returnInfo['b'] = $danBaoMoney;
        $returnInfo['c'] = $booksWaterInfo;
        return $returnInfo;
    }

    /**
     * @api {post} admin/Financial/bankLendList 银行放款入账列表[admin/Financial/bankLendList]
     * @apiVersion 1.0.0
     * @apiName bankLendList
     * @apiGroup Financial
     * @apiSampleRequest admin/Financial/bankLendList
     *
     *
     * @apiParam {int} create_uid    人员id
     * @apiParam {int} subordinates    1含下属 0不含下属
     * @apiParam {int} type    订单类型
     * @apiParam {int}  start_time   开始时间
     * @apiParam {int}  end_time   结束时间
     * @apiParam {int}  bank_money_status   银行放款入账状态 1待入账 2待复核 3已复核 4驳回待处理
     * @apiParam {int} search_text    关键字搜索
     * @apiParam {int} page    页码
     * @apiParam {int} limit    条数
     *
     * @apiSuccessExample {json} 返回数据示例:
     * HTTP/1.1 200 OK
     * "data": {
     *       "total": 2,
     *       "per_page": 20,
     *       "current_page": 1,
     *       "last_page": 1,
     *       "data": [
     *           {
     *           "order_sn": "JYDB2018050096",
     *           "finance_sn": "100000047",
     *           "type": "JYDB",
     *           "name": "夏丽平",
     *           "estate_name": "国际新城",
     *           "estate_owner": null,
     *           "bank_money_time": "2018-05-08 14:50:07",
     *           "guarantee_money": "2.00",
     *           "bank_money": "0.00",
     *           "bank_money_status": 1
     *           },
     *           {
     *           "order_sn": "JYDB2018050095",
     *           "finance_sn": "100000047",
     *           "type": "JYDB",
     *           "name": "夏丽平",
     *           "estate_name": "国际新城",
     *           "estate_owner": null,
     *           "bank_money_time": "2018-05-08 14:46:58",
     *           "guarantee_money": "2.00",
     *           "bank_money": "0.00",
     *           "bank_money_status": 1
     *           }
     *       ]
     *   }
     * @apiSuccess {int} total    总条数
     * @apiSuccess {int} per_page    每页显示的条数
     * @apiSuccess {int} current_page    当前页
     * @apiSuccess {int} last_page    总页数
     * @apiSuccess {string} order_sn    业务单号
     * @apiSuccess {int} finance_sn    财务序号
     * @apiSuccess {int} type     订单类型
     * @apiSuccess {string} name    理财经理
     * @apiSuccess {string} estate_name    房产名称
     * @apiSuccess {string} estate_owner    业主姓名
     * @apiSuccess {string} bank_money_time    复核时间
     * @apiSuccess {float} guarantee_money    担保金额
     * @apiSuccess {float} bank_money    银行放款金额
     * @apiSuccess {int} bank_money_status    入账状态 1待入账 2待复核 3已复核 4驳回待处理
     */

    public function bankLendList(){
        $createUid = input('create_uid')?:0;
        $subordinates = input('subordinates')?:0;
        $type = input('type');
        $startTime = input('start_time');
        $endTime = input('end_time');
        $bank_money_status = input('bank_money_status')?:0;
        $searchText = trim(input('search_text'));
        $page = input('page') ? input('page') : 1;
        $pageSize = input('limit') ? input('limit') : config('apiBusiness.ADMIN_LIST_DEFAULT');
        $userId = $this->userInfo['id'];
        //$userId = 2;
        $map = [];
        //用户判断//
        if(!empty($createUid)){
            $userStr = SystemUser::orderCheckPower($userId,$createUid,$subordinates);
            //return json($userStr);
            if($userStr !== false)
                $map['x.financing_manager_id']=['in', $userStr];
            else
                return $this->buildSuccess([]);
        }
        if($startTime && $endTime){
            if($startTime > $endTime){
                $map['n.bank_money_time'] = array(array('egt', $endTime), array('elt', $startTime));
            }else{
                $map['n.bank_money_time'] = array(array('egt', $startTime), array('elt', $endTime));
            }
        }elseif($startTime){
            $map['n.bank_money_time'] = ['egt',$startTime];
        }elseif($endTime){
            $map['n.bank_money_time'] = ['elt',$endTime];
        }
        $type && $map['x.type'] = $type;
        $bank_money_status && $map['n.bank_money_status'] = $bank_money_status;
        $searchText && $map['y.estate_name|x.order_sn|x.finance_sn']=['like', "%{$searchText}%"];
        $map['x.delete_time'] = NULL;
        $map['x.status'] = 1;
        try{
            return $this->buildSuccess(Order::bankList($map,$page,$pageSize));
        }catch (\Exception $e){
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '查询失败!');
        }
    }

    /**
     * @api {post} admin/Financial/addBankWater 增加银行入账流水[admin/Financial/addBankWater]
     * @apiVersion 1.0.0
     * @apiName addBankWater
     * @apiGroup Financial
     * @apiSampleRequest admin/Financial/addBankWater
     *
     * @apiParam {string}  order_sn   订单编号
     * @apiParam {int}  finance_sn   财务序号
     * @apiParam {float}  bank_money  银行放款金额
     * @apiParam {string}  lender_bank   放款银行
     * @apiParam {string}  receivable_account 收款账户
     * @apiParam {string}  bank_money_time   到账时间
     * @apiParam {string}  remark   备注
     * @apiParam {int}  is_bank_loan_finish  银行放款是否完成 0未完成 1已完成
     *
     */

    public function addBankWater(){
        $waterInfo['order_sn'] = input('order_sn');
        $waterInfo['finance_sn'] = input('finance_sn');
        $waterInfo['bank_money'] = input('bank_money')?:0;
        $waterInfo['total_money'] = input('bank_money')?:0;
        $waterInfo['lender_bank'] = input('lender_bank');
        $waterInfo['receivable_account'] = input('receivable_account');
        $waterInfo['bank_money_time'] = input('bank_money_time');
        $waterInfo['remark'] = input('remark');
        $is_bank_loan_finish = input('is_bank_loan_finish')?:0;
        //验证器验证参数
        $valiDate = validate('BankLending');
        if(!$valiDate->check($waterInfo)){
            return $this->buildFailed(ReturnCode::EMPTY_PARAMS, $valiDate->getError());
        }
        // 启动事务
        Db::startTrans();
        try{
            $waterInfo['create_time'] = time();
            $waterInfo['create_uid'] = $this->userInfo['id'];
            //添加银行放款入账流水
            OrderBankRecord::create($waterInfo);
            //更改担保赎楼信息表信息
            $guaranteeInfo = OrderGuarantee::get(['order_sn' => $waterInfo['order_sn']]);
            $guaranteeInfo->bank_money = $guaranteeInfo['bank_money'] + $waterInfo['bank_money'];
            $guaranteeInfo->update_time = time();
            $guaranteeInfo->is_bank_loan_finish = $is_bank_loan_finish;
            if($is_bank_loan_finish == 1) $guaranteeInfo->bank_money_status = 2;
            $guaranteeInfo->save();
            /*添加订单操作记录*/
            //根据订单号查询出订单状态
            $stageInfo = Order::getOne(['order_sn' => $waterInfo['order_sn']],'stage');
            if(strlen($stageInfo['stage']) == 4){
                $operate = $stage = show_status_name($stageInfo['stage'],'ORDER_JYDB_STATUS');
            }else{
                $operate = $stage = show_status_name($stageInfo['stage'],'ORDER_JYDB_FINC_STATUS');
            }
            $operate_node = $this->userInfo['name']."添加银行放款入账流水";
            $operate_det = $this->userInfo['deptname'].'=>'.$this->userInfo['name']."给订单添加银行放款入账流水";
            $operate_reason = '';
            $stage_code = $stageInfo['stage'];
            $operate_table = 'order';
            OrderComponents::addOrderLog($this->userInfo,$waterInfo['order_sn'], $stage, $operate,$operate_node,$operate_det,$operate_reason,$stage_code,$operate_table);
            // 提交事务
            Db::commit();
            return $this->buildSuccess('银行放款入账流水添加成功');
        }catch (\Exception $e){
            // 回滚事务
            Db::rollback();
            return $this->buildFailed(ReturnCode::UPDATE_FAILED, '银行放款入账流水添加失败');
        }
    }

    /**
     * @api {post} admin/Financial/showBankLendDetail 银行放款入账流水明细[admin/Financial/showBankLendDetail]
     * @apiVersion 1.0.0
     * @apiName showBankLendDetail
     * @apiGroup Financial
     * @apiSampleRequest admin/Financial/showBankLendDetail
     *
     *
     * @apiParam {string}  order_sn   订单编号
     *
     * @apiSuccessExample {json} 返回数据示例:
     * HTTP/1.1 200 OK
     * {
     *       "code": 1,
     *       "msg": "操作成功",
     *        data": {
     *           "orderinfo": {
     *               "order_sn": "JYDB2018050137123456",
     *               "type": "JYDB",
     *               "name": "夏丽平",
     *               "deptname": "财务中心",
     *               "finance_sn": "100000048",
     *               "guarantee_money": "2.00",
     *               "bank_money": "180265.00",
     *               "is_bank_loan_finish": 0,
     *               "bank_money_status": 1,
     *               "chuzhang_money": "4.00",
     *               "dp_redeem_bank": "农业"
     *             },
     *         "BankLendInfo": [
     *               {
     *               "bank_money": "56786.00",
     *               "lender_bank": "中国银行",
     *               "receivable_account": "中国银行账户",
     *               "bank_money_time": "2019-11-03",
     *               "remark": "法国红酒狂欢节",
     *               "operation_name": "杜欣"
     *               },
     *               {
     *               "bank_money": "123456.00",
     *               "lender_bank": "中国银行",
     *               "receivable_account": "中国银行账户",
     *               "bank_money_time": "2019-11-02",
     *               "remark": "啊是的范德萨",
     *               "operation_name": "杜欣"
     *               }
     *            ]
     *        }
     *   }
     *
     * @apiSuccess {string} order_sn    订单编号
     * @apiSuccess {string} type    订单类型
     * @apiSuccess {string} name    理财经理
     * @apiSuccess {string} deptname    所在部门
     * @apiSuccess {int}   finance_sn  财务序号
     * @apiSuccess {float} guarantee_money    担保金额
     * @apiSuccess {float} bank_money    实收金额总计(银行放款金额总计)
     * @apiSuccess {float} chuzhang_money    出账金额
     * @apiSuccess {int}   bank_money_status  入账状态 1待入账 2待复核 3已复核 4驳回待处理
     * @apiSuccess {int}   is_bank_loan_finish  银行放款是否完成 0未完成 1已完成
     * @apiSuccess {string} dp_redeem_bank    放款银行(新增入账流水表单里面的放款银行)
     * @apiSuccess {string} lender_bank    放款银行(流水明细)
     * @apiSuccess {int}   bank_money  放款金额
     * @apiSuccess {string} receivable_account    收款账户
     * @apiSuccess {string} bank_money_time    到账时间
     * @apiSuccess {string}   remark  备注说明
     * @apiSuccess {string} operation_name    入账人员
     *
     */

    public function showBankLendDetail(){
        $orderSn = input('order_sn');
        if(empty($orderSn)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '订单编号不能为空!');
        try{
            $returnInfo = [];
            $orderInfo = Order::banksDetail($orderSn);
            $field = 'bank_money,lender_bank,receivable_account,bank_money_time,remark,create_uid';
            $booksWaterInfo = OrderBankRecord::getAll(['order_sn' => $orderSn],$field,'create_time desc');
            foreach ($booksWaterInfo as $k => $v){
                $booksWaterInfo[$k]['operation_name'] = SystemUser::where(['id' => $v['create_uid']])->value('name');
                unset($booksWaterInfo[$k]['create_uid']);
            }
            $returnInfo['orderinfo'] = $orderInfo; //订单信息
            $returnInfo['BankLendInfo'] = $booksWaterInfo;//银行放款流水明细
            return $this->buildSuccess($returnInfo);
        }catch (\Exception $e){
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '查询失败!');
        }

    }

    /**
     * @api {post} admin/Financial/editReview 银行放款入账复核[admin/Financial/editReview]
     * @apiVersion 1.0.0
     * @apiName editReview
     * @apiGroup Financial
     * @apiSampleRequest admin/Financial/editReview
     *
     *
     * @apiParam {string}  order_sn   订单编号
     * @apiParam {int}  type   按钮区分  1 确认复核 2驳回
     *
     *
     */

    public function editReview(){
        $orderSn = input('order_sn');
        $type = input('type');
        if(empty($orderSn) || empty($type)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '参数不能为空!');
        try{
            if($type == 1){
                OrderGuarantee::where('order_sn',$orderSn)->update(['bank_money_status' => 3,'bank_money_time' => date('Y-m-d',time())]);
                $msg = "复核成功";
            }elseif ($type == 2){
                OrderGuarantee::where('order_sn',$orderSn)->update(['bank_money_status' => 4,'is_bank_loan_finish' => 0]);
                $msg = "驳回成功";
            }
            /*添加订单操作记录*/
            //根据订单号查询出订单状态
            $stageInfo = Order::getOne(['order_sn' => $orderSn],'stage');
            if(strlen($stageInfo['stage']) == 4){
                $operate = $stage = show_status_name($stageInfo['stage'],'ORDER_JYDB_STATUS');
            }else{
                $operate = $stage = show_status_name($stageInfo['stage'],'ORDER_JYDB_FINC_STATUS');
            }
            $operate_node = $this->userInfo['name']."银行放款入账审核=>".$msg;;
            $operate_det = $this->userInfo['deptname'].'=>'.$this->userInfo['name']."银行放款入账审核=>".$msg;
            $operate_reason = '';
            $stage_code = $stageInfo['stage'];
            $operate_table = 'order';
            OrderComponents::addOrderLog($this->userInfo,$orderSn, $stage, $operate,$operate_node,$operate_det,$operate_reason,$stage_code,$operate_table);
            return $this->buildSuccess($msg);
        }catch (\Exception $e){
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '复核失败!');
        }

    }

    /**
     * @api {post} admin/Financial/instructionList 发送指令列表[admin/Financial/instructionList]
     * @apiVersion 1.0.0
     * @apiName instructionList
     * @apiGroup Financial
     * @apiSampleRequest admin/Financial/instructionList
     *
     *
     * @apiParam {int} create_uid    人员id
     * @apiParam {int} subordinates    1含下属 0不含下属
     * @apiParam {int} type    订单类型
     * @apiParam {int}  instruct_status   指令状态（1待申请 2待发送 3已发送）
     * @apiParam {int}  is_lend   是否放款（1是 2否）
     * @apiParam {int} search_text    关键字搜索
     * @apiParam {int} page    页码
     * @apiParam {int} limit    条数
     *
     * @apiSuccessExample {json} 返回数据示例:
     * HTTP/1.1 200 OK
     * "data": {
     *       "total": 2,
     *       "per_page": 20,
     *       "current_page": 1,
     *       "last_page": 1,
     *       "data": [
     *           {
     *           "order_sn": "JYDB2018050096",
     *           "finance_sn": "100000047",
     *           "type": "JYDB",
     *           "name": "夏丽平",
     *           "estate_name": "国际新城",
     *           "estate_owner": null,
     *           "instruct_status": 1,
     *           "is_bank_loan_finish": 1
     *           },
     *           {
     *           "order_sn": "JYDB2018050095",
     *           "finance_sn": "100000047",
     *           "type": "JYDB",
     *           "name": "夏丽平",
     *           "estate_name": "国际新城",
     *           "estate_owner": null,
     *           "instruct_status": 3,
     *           "is_bank_loan_finish": 1,
     *           }
     *       ]
     *   }
     * @apiSuccess {int} total    总条数
     * @apiSuccess {int} per_page    每页显示的条数
     * @apiSuccess {int} current_page    当前页
     * @apiSuccess {int} last_page    总页数
     * @apiSuccess {string} order_sn    业务单号
     * @apiSuccess {int} finance_sn    财务序号
     * @apiSuccess {string} type     订单类型
     * @apiSuccess {string} name    理财经理
     * @apiSuccess {string} estate_name    房产名称
     * @apiSuccess {string} estate_owner    业主姓名
     * @apiSuccess {int} instruct_status    指令状态（1待申请 2待发送 3已发送）
     * @apiSuccess {int} is_bank_loan_finish    是否放款  0否  1是
     */

    public function instructionList(){
        $createUid = input('create_uid')?:0;
        $subordinates = input('subordinates')?:0;
        $type = input('type');
        $instruct_status = input('instruct_status')?:0;
        $is_lend = input('is_lend')?:0;
        $searchText = trim(input('search_text'));
        $page = input('page') ? input('page') : 1;
        $pageSize = input('limit') ? input('limit') : 10;
        $userId = $this->userInfo['id'];
        //$userId = 2;
        $map = [];
        //用户判断//
        if(!empty($createUid)){
            $userStr = SystemUser::orderCheckPower($userId,$createUid,$subordinates);
            //return json($userStr);
            if($userStr !== false)
                $map['x.financing_manager_id']=['in', $userStr];
            else
                return $this->buildSuccess([]);
        }
        $type && $map['x.type'] = $type;
        $instruct_status && $map['n.instruct_status'] = $instruct_status;
        if(!empty($is_lend) && $is_lend == 1){
            $map['n.is_bank_loan_finish'] = 1;
        }elseif (!empty($is_lend) && $is_lend == 2){
            $map['n.is_bank_loan_finish'] = 0;
        }
        $searchText && $map['y.estate_name|x.order_sn|x.finance_sn']=['like', "%{$searchText}%"];
        $map['x.delete_time'] = NULL;
        $map['x.status'] = 1;
        $map['x.stage'] = 1012;
        $map['n.is_instruct'] = 1;
        try{
            return $this->buildSuccess(Order::instructionList($map,$page,$pageSize));
        }catch (\Exception $e){
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '查询失败!');
        }
    }

    /**
     * @api {post} admin/Financial/foreclosureInfo 赎楼出账表信息[admin/Financial/foreclosureInfo]
     * @apiVersion 1.0.0
     * @apiName foreclosureInfo
     * @apiGroup Financial
     * @apiSampleRequest admin/Financial/foreclosureInfo
     *
     *
     * @apiParam {string}  order_sn   订单编号
     *
     * @apiSuccessExample {json} 返回数据示例:
     * HTTP/1.1 200 OK
     *  "data": {
            "basic_information": {                      基本信息
                "order_sn": "JYDB2018050137123456",    业务单号
                "type": "JYDB",        业务类型
                "finance_sn": "100000048",      财务序号
                "guarantee_money": "2.00",      担保金额
                "guarantee_per": 2,            担保成数
                "financing_manager_name": "夏丽平",    理财经理
                "dept_manager_name": "杜欣",           部门经理
                "deptname": "总经办"                   所属部门
            },
            "estate_info": [   房产信息
                {
                "estate_name": "国际新城一栋",                  房产名称
                "estate_region": "深圳市|罗湖区|桂园街道",      所属城区
                "estate_area": 70,                             房产面积
                "estate_certtype": 1,                          产证类型
                "estate_certnum": 11111,                       产证编码
                "house_type": 1                                房产类型 1分户 2分栋
                },
                {
                "estate_name": "国际新城一栋",
                "estate_district": "440303",
                "estate_area": 70,
                "estate_certtype": 1,
                "estate_certnum": 11111,
                "house_type": 1
                }
            ],
            "seller_info": [  卖房信息(转让方)
                {
                "cname": "张三",                 卖方姓名
                "ctype": 1,                      卖方类型 1个人 2企业
                "certtype": 1,                   证件类型
                "certcode": "11111122322",       证件号码
                "mobile": "18825454079",         电话号码
                "is_guarantee": 0                 担保申请人 1是 0否
                },
                {
                "cname": "张三",
                "ctype": 1,
                "certtype": 1,
                "certcode": "11111122322",
                "mobile": "18825454079",
                "is_guarantee": 0
                }
            ],
            "borrower_info": [       卖方共同借款人
                {
                "cname": "张三",          共同借款人姓名
                "ctype": 1,               借款人类型 1个人 2企业
                "certtype": 1,                证件类型
                "certcode": "1111112sdad222",  证件号码
                "mobile": "18825454079",        电话号码
                "is_guarantee": 0                担保申请人 1是 0否
                },
                {
                "cname": "张三",
                "ctype": 1,
                "certtype": 1,
                "certcode": "1111112222",
                "mobile": "18825454079",
                "is_guarantee": 0
                },
            ],
            "preliminary_question": [    风控初审问题汇总
                {
                "describe": "呵呵456",     问题描述
                "status": 0               是否解决  0未解决 1已经解决
                },
                {
                "describe": "呵呵帅那个帅789",
                "status": 0
                }
            ],
            "needing_attention": [   风控提醒注意事项
                {
                "process_name": "收到公司的",    来源
                "item": "啥打法是否"             注意事项
                },
                {
                "process_name": "测试",
                "item": "测试注意事项"
                }
            ],
            "arrears_info": [    欠款及出账金额
                {
                "organization": "银行",      欠款机构名称
                "interest_balance": "111111.11",    欠款金额
                "mortgage_type_name": "商业贷款",   欠款类型
                "accumulation_fund": "2.00"         出账金额
                },
                {
                "organization": "银行",
                "interest_balance": "111111.11",
                "mortgage_type_name": "公积金贷款",
                "accumulation_fund": "2.00"
                }
            ],
            "reimbursement_info": [   预录赎楼还款账户
                {
                "bankaccount": "张三",   银行户名
                "accounttype": 1,        账户类型：1卖方 2卖方共同借款人 3买方 4买方共同借款人 5其它
                "bankcard": "111111",    银行卡号
                "openbank": "中国银行"    开户银行
                },
                {
                "bankaccount": "李四",
                "accounttype": 5,
                "bankcard": "111",
                "openbank": "工商银行"
                }
            ],
            "cost_account":{     费用入账
                "guarantee_fee": "1000.00",   担保费
                "fee": "-15.00",              手续费
                "self_financing": "30.00",    自筹金额
                "short_loan_interest": "-12.30",   短贷利息
                "return_money": "12.50",           赎楼返还款
                "default_interest": "0.00",        罚息
                "overdue_money": "0.00",           逾期金额
                "other_money": "0.00"             其他
                },
            "lend_books": [    银行放款入账
                {
                "bank_money": "56786.00",             放款金额
                "lender_bank": "中国银行",           放款银行
                "receivable_account": "中国银行账户",    收款账户
                "bank_money_time": "2019-11-03",        到账时间
                "remark": "法国红酒狂欢节",             备注说明
                "operation_name": "杜欣"                入账人员
                },
                {
                "bank_money": "123456.00",
                "lender_bank": "中国银行",
                "receivable_account": "中国银行账户",
                "bank_money_time": "2019-11-02",
                "remark": "啊是的范德萨",
                "operation_name": "杜欣"
                }
            ],
            "status_info": {        各种需要用到的状态字段
                "guarantee_fee_status": 2,     （担保费）收费状态 1未收齐 2已收齐
                "bank_money_status": 1,         银行放款入账状态 1待入账 2待复核 3已复核 4驳回待处理
                "instruct_status": 3,           指令状态（1待申请 2待发送 3已发送）
                "is_bank_loan_finish": 1,             银行放款是否完成 0未完成 1已完成
                "is_comborrower_sell": 1       是否卖方有共同借款人 0否 1是
                "is_show_button": 2            是否显示确认放款按钮  1 显示  2不显示
            }
        }
     */

    public function foreclosureInfo(){
        $orderSn = input('order_sn');
        if(empty($orderSn)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '订单编号不能为空!');
        //try{
            $returnInfo = [];
            //基本信息信息
            $returnInfo['basic_information'] = OrderComponents::orderJbInfo($orderSn);
            //房产信息
            $resInfo = OrderComponents::showEstateList($orderSn,'estate_name,estate_region,estate_area,estate_certtype,estate_certnum,house_type');
            $newStageArr =  dictionary_reset((new Dictionary)->getDictionaryByType('PROPERTY_TYPE'));
            if($resInfo){
                foreach($resInfo as &$val){
                    $val['estate_certtype_str'] = $newStageArr[$val['estate_certtype']] ? $newStageArr[$val['estate_certtype']]:'';
                }
            }
            $returnInfo['estate_info'] = $resInfo;
            //卖方信息(转让方)
            $resInfo = OrderComponents::showCustomerInfo($orderSn,'cname,ctype,certtype,certcode,mobile,is_guarantee',false,0,false);
            $newStageArr =  dictionary_reset((new Dictionary)->getDictionaryByType('CERTTYPE'));
            if($resInfo){
                foreach($resInfo as &$val){
                    $val['certtype_str'] = $newStageArr[$val['certtype']] ? $newStageArr[$val['certtype']]:'';
                }
            }
            $returnInfo['seller_info'] = $resInfo;
            //卖方共同借款人
            $resInfo = OrderComponents::showCustomerInfo($orderSn,'cname,ctype,certtype,certcode,mobile,is_guarantee',false,1,false);
            $newStageArr =  dictionary_reset((new Dictionary)->getDictionaryByType('CERTTYPE'));
            if($resInfo){
                foreach($resInfo as &$val){
                    $val['certtype_str'] = $newStageArr[$val['certtype']] ? $newStageArr[$val['certtype']]:'';
                }
            }
            $returnInfo['borrower_info'] = $resInfo;
            //实际出账收款账户
            //$returnInfo['collection_info'] = OrderComponents::showCollectionInfo($orderSn);
            //风控初审问题汇总
            $returnInfo['preliminary_question'] = OrderComponents::showPreliminary($orderSn);
            //风控提醒注意事项
            $returnInfo['needing_attention'] = OrderComponents::showNeedAtten($orderSn);
            //欠款及出账金额 => 原按揭信息
            $returnInfo['arrears_info'] = OrderComponents::showArrearsInfo($orderSn,'mortgage_type,organization,interest_balance','ORIGINAL');
            //预录赎楼还款账户
            $resInfo = OrderComponents::showGuaranteeBank($orderSn,'bankaccount,accounttype,bankcard,openbank','BOOK',1);
            $newStageArr =  dictionary_reset((new Dictionary)->getDictionaryByType('JYDB_ACCOUNT_TYPE'));
            if($resInfo){
                foreach($resInfo as &$val){
                    $val['accounttype_str'] = $newStageArr[$val['accounttype']] ? $newStageArr[$val['accounttype']]:'';
                }
            }
            $returnInfo['reimbursement_info'] = $resInfo;
            //费用入账
            $returnInfo['cost_account'] = OrderComponents::showChargeList($orderSn);
            //银行放款入账
            $returnInfo['lend_books'] = OrderComponents::showBankList($orderSn);
            //查询出各种状态
            $returnInfo['status_info'] = OrderComponents::showStstusInfo($orderSn);
            //确认放款按钮是否展示
            $returnInfo['status_info']['is_show_button'] = self::isShowButton($returnInfo['status_info']);
            return $this->buildSuccess($returnInfo);
        //}catch (\Exception $e){
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '查询失败!');
        //}
    }


    /*
     * 判断是否需要显示放款完成按钮
     * */
    private function isShowButton($statusInfo){
        $arrSign = [];
        foreach ($this->userInfo['group'] as $k => $v){
            $sign = Db::name('system_auth_group')->where(['id' => $v])->value('sign');
            $arrSign[] = $sign;
        }
        if(in_array('investment_advisor',$arrSign)){
            $bool = true;
        }else{
            $bool = false;
        }
         if($statusInfo['is_dispatch'] != 1 && $statusInfo['instruct_status'] == 3 && $statusInfo['is_bank_loan_finish'] == 0 && $bool){  //显示放款按钮
             return 1;
         }else{
             return 2;
         }
    }



    /**
     * @api {post} admin/Financial/instructionsSend 指令发送[admin/Financial/instructionsSend]
     * @apiVersion 1.0.0
     * @apiName instructionsSend
     * @apiGroup Financial
     * @apiSampleRequest admin/Financial/instructionsSend
     *
     *
     * @apiParam {string}  order_sn   订单编号
     *@apiParam {int}  type   1申请发送 2撤回发送 3确认放款 4确认发送
     */

    public function instructionsSend(){
        $orderSn = input('order_sn');
        $type = input('type');
        if(empty($orderSn) || empty($type)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '参数不能为空!');
        try{
            //担保费是否收齐 指令状态 银行放款入账状态
            $guaranteeInfo = OrderGuarantee::where('order_sn',$orderSn)->field('guarantee_fee_status,instruct_status,is_bank_loan_finish,is_dispatch')->find();
            if($type == 1){
                //判断担保费是否已经收齐，未收齐则不能申请发送
                if($guaranteeInfo['instruct_status'] != 1) return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '指令状态为待申请，才能申请发送!');
                if($guaranteeInfo['is_dispatch'] == 0 && $guaranteeInfo['guarantee_fee_status'] == 1) return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '担保费未收齐,不能申请发送!');
                OrderGuarantee::where('order_sn',$orderSn)->update(['instruct_status' => 2]);
                $msg = "申请发送成功";
            }elseif ($type == 2){
                if($guaranteeInfo['instruct_status'] != 3) return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '指令状态为已发送，才能申请撤回!');
                if($guaranteeInfo['is_bank_loan_finish'] == 1) return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '银行已经完成放款入账,不能申请撤回!');
                OrderGuarantee::where('order_sn',$orderSn)->update(['instruct_status' => 2]);
                $msg = "撤回发送成功";
            }elseif ($type == 3){
                if($guaranteeInfo['instruct_status'] != 3) return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '指令状态为已发送，才能申请确认放款!');
                if($guaranteeInfo['is_bank_loan_finish'] == 1) return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '银行放款已经完成,不能重复申请!');
                OrderGuarantee::where('order_sn',$orderSn)->update(['is_bank_loan_finish' => 1]);
                $msg = "确认放款成功";
            }elseif ($type == 4){
                if($guaranteeInfo['instruct_status'] != 2) return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '指令状态为待发送，才能申请确认发送!');
                OrderGuarantee::where('order_sn',$orderSn)->update(['instruct_status' => 3]);
                $msg = "确认发送成功";
            }
            /*添加订单操作记录*/
            //根据订单号查询出订单状态
            $stageInfo = Order::getOne(['order_sn' => $orderSn],'stage');
            if(strlen($stageInfo['stage']) == 4){
                $operate = $stage = show_status_name($stageInfo['stage'],'ORDER_JYDB_STATUS');
            }else{
                $operate = $stage = show_status_name($stageInfo['stage'],'ORDER_JYDB_FINC_STATUS');
            }
            $operate_node = $this->userInfo['name']."发送指令";
            $operate_det = $this->userInfo['deptname'].'=>'.$this->userInfo['name']."发送指令=>".$msg;
            $operate_reason = '';
            $stage_code = $stageInfo['stage'];
            $operate_table = 'order';
            OrderComponents::addOrderLog($this->userInfo,$orderSn, $stage, $operate,$operate_node,$operate_det,$operate_reason,$stage_code,$operate_table);
            return $this->buildSuccess($msg);
        }catch (\Exception $e){
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '发送失败!');
        }
    }









}
