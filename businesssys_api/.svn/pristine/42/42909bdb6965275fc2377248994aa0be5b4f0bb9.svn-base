<?php
/**
 * Created by PhpStorm.
 * User: 赵光帅
 * Date: 2018/6/27
 * Time: 13:38
 */
namespace app\admin\controller;

use app\util\ReturnCode;
use app\util\OrderComponents;
use app\model\Order;
use app\model\SystemUser;
use app\model\OrderCostRecord;
use app\model\OrderFundChannel;
use think\Db;
use app\model\OrderGuarantee;
use app\model\Dictionary;



class CashBusiness extends Base {
    /**
     * @api {post} admin/CashBusiness/channelsInstructionList 发送指令列表(渠道)[admin/Financial/channelsInstructionList]
     * @apiVersion 1.0.0
     * @apiName channelsInstructionList
     * @apiGroup CashBusiness
     * @apiSampleRequest admin/CashBusiness/channelsInstructionList
     *
     *
     * @apiParam {int} create_uid    人员id
     * @apiParam {int} subordinates    1含下属 0不含下属
     * @apiParam {int} type    订单类型
     * @apiParam {int} fund_channel_id    资金渠道id
     * @apiParam {int}  instruct_status   指令状态（1待申请 2待财务审核 3待发送 4已经发送）
     * @apiParam {int}  is_lend   是否放款（1是 2否）
     * @apiParam {int} search_text    关键字搜索
     * @apiParam {int} page    页码
     * @apiParam {int} limit    条数
     *
     * @apiSuccessExample {json} 返回数据示例:
     * HTTP/1.1 200 OK
     * "data": {
     *       "total": 2,
     *       "per_page": 20,
     *       "current_page": 1,
     *       "last_page": 1,
     *       "data": [
     *           {
     *           "order_sn": "JYXJ2018060063",       订单编号
     *           "finance_sn": "100000337",          财务序号
     *           "type": "交易现金",                 订单类型
     *           "name": "刘颖6",                    理财经理
     *           "estate_name": "名称1阁栋名称1010",        房产名称
     *           "estate_owner": "张三",                    业主姓名
     *           "instruct_status": 1,                      指令状态（1待申请 2待财务审核 3待发送 4已经发送）
     *           "id":123,                           订单资金渠道表id
     *           "is_loan_finish": 0,                       是否放款  0否  1是
     *           "fund_channel_name": "永安",               资金渠道
     *           "money": "1000.00",                        垫资金额
     *           "type_text": "JYXJ"                        订单类型(简写)
     *           },
     *           {
     *           "order_sn": "SQDZ2018060012",
     *           "finance_sn": "100000328",
     *           "type": "首期款垫资",
     *           "name": "刘颖6",
     *           "estate_name": "名称1阁栋名称1010",
     *           "estate_owner": "张三",
     *           "instruct_status": 0,
     *           "is_loan_finish": 0,
     *           "fund_channel_name": "永安",
     *           "money": "1000.00",
     *           "type_text": "SQDZ"
     *           }
     *       ]
     *   }
     */

    public function channelsInstructionList(){
        $createUid = input('create_uid')?:0;
        $subordinates = input('subordinates')?:0;
        $type = input('type');
        $instruct_status = input('instruct_status')?:0;
        $is_lend = input('is_lend')?:0;
        $searchText = trim(input('search_text'));
        $page = input('page') ? input('page') : 1;
        $pageSize = input('limit') ? input('limit') : 10;
        $userId = $this->userInfo['id'];
        //$userId = 2;
        $map = [];
        //用户判断//
        if(!empty($createUid)){
            $userStr = SystemUser::orderCheckPower($userId,$createUid,$subordinates);
            //return json($userStr);
            if($userStr !== false)
                $map['o.financing_manager_id']=['in', $userStr];
            else
                return $this->buildSuccess([]);
        }
        $type && $map['o.type'] = $type;
        $instruct_status && $map['x.instruct_status'] = $instruct_status;
        if(!empty($is_lend) && $is_lend == 1){
            $map['x.is_loan_finish'] = 1;
        }elseif (!empty($is_lend) && $is_lend == 2){
            $map['x.is_loan_finish'] = 0;
        }
        $searchText && $map['y.estate_name|o.order_sn|o.finance_sn']=['like', "%{$searchText}%"];
        $map['x.delivery_status'] = 2;
        $map['x.status'] = 1;
        try{
            return $this->buildSuccess(OrderFundChannel::instructionList($map,$page,$pageSize));
        }catch (\Exception $e){
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '查询失败!');
        }
    }

    /**
     * @api {post} admin/CashBusiness/channelsInfo 赎楼出账表信息[admin/CashBusiness/channelsInfo]
     * @apiVersion 1.0.0
     * @apiName channelsInfo
     * @apiGroup CashBusiness
     * @apiSampleRequest admin/CashBusiness/channelsInfo
     *
     *
     * @apiParam {string}  order_sn   订单编号
     *
     * @apiSuccessExample {json} 返回数据示例:
     * HTTP/1.1 200 OK
     *  "data": {
            "basic_information": {                      基本信息
            "order_sn": "JYDB2018050137123456",    业务单号
            "type": "JYDB",        业务类型
            "finance_sn": "100000048",      财务序号
            "guarantee_money": "2.00",      担保金额
            "guarantee_per": 2,            担保成数
            "financing_manager_name": "夏丽平",    理财经理
            "dept_manager_name": "杜欣",           部门经理
            "deptname": "总经办"                   所属部门
            },
            "estate_info": [   房产信息
            {
            "estate_name": "国际新城一栋",                  房产名称
            "estate_region": "深圳市|罗湖区|桂园街道",      所属城区
            "estate_area": 70,                             房产面积
            "estate_certtype": 1,                          产证类型
            "estate_certnum": 11111,                       产证编码
            "house_type": 1                                房产类型 1分户 2分栋
            },
            {
            "estate_name": "国际新城一栋",
            "estate_district": "440303",
            "estate_area": 70,
            "estate_certtype": 1,
            "estate_certnum": 11111,
            "house_type": 1
            }
            ],
            "seller_info": [  卖房信息(转让方)
            {
            "cname": "张三",                 卖方姓名
            "ctype": 1,                      卖方类型 1个人 2企业
            "certtype": 1,                   证件类型
            "certcode": "11111122322",       证件号码
            "mobile": "18825454079",         电话号码
            "is_guarantee": 0                 担保申请人 1是 0否
            },
            {
            "cname": "张三",
            "ctype": 1,
            "certtype": 1,
            "certcode": "11111122322",
            "mobile": "18825454079",
            "is_guarantee": 0
            }
            ],
            "borrower_info": [       卖方共同借款人
            {
            "cname": "张三",          共同借款人姓名
            "ctype": 1,               借款人类型 1个人 2企业
            "certtype": 1,                证件类型
            "certcode": "1111112sdad222",  证件号码
            "mobile": "18825454079",        电话号码
            "is_guarantee": 0                担保申请人 1是 0否
            },
            {
            "cname": "张三",
            "ctype": 1,
            "certtype": 1,
            "certcode": "1111112222",
            "mobile": "18825454079",
            "is_guarantee": 0
            },
            ],
            "preliminary_question": [    风控初审问题汇总
            {
            "describe": "呵呵456",     问题描述
            "status": 0               是否解决  0未解决 1已经解决
            },
            {
            "describe": "呵呵帅那个帅789",
            "status": 0
            }
            ],
            "needing_attention": [   风控提醒注意事项
            {
            "process_name": "收到公司的",    来源
            "item": "啥打法是否"             注意事项
            },
            {
            "process_name": "测试",
            "item": "测试注意事项"
            }
            ],
            "arrears_info": [    欠款及出账金额
            {
            "organization": "银行",      欠款机构名称
            "interest_balance": "111111.11",    欠款金额
            "mortgage_type_name": "商业贷款",   欠款类型
            "accumulation_fund": "2.00"         出账金额
            },
            {
            "organization": "银行",
            "interest_balance": "111111.11",
            "mortgage_type_name": "公积金贷款",
            "accumulation_fund": "2.00"
            }
            ],
            "reimbursement_info": [    type = 1 预录赎楼还款账户;type = 3 过账账号信息;type = 4 回款账号信息
                {
                "type": 1,                   区分账户类型
                "bankaccount": "123",        银行户名
                "accounttype": 1,
                "bankcard": "123",           银行卡号
                "openbank": "工商银行",      开户银行
                "accounttype_str": "卖方"    账户类型(中文)
                },
                {
                "type": 3,
                "bankaccount": "123",
                "accounttype": 1,
                "bankcard": "123",
                "openbank": "中国银行",
                "accounttype_str": "卖方"
                },
                {
                "type": 4,
                "bankaccount": "1234",
                "accounttype": 1,
                "bankcard": "123",
                "openbank": "中国银行",
                "accounttype_str": "卖方"
                }
            ],
            "cost_account":{     费用入账
            "guarantee_fee": "1000.00",   担保费
            "fee": "-15.00",              手续费
            "self_financing": "30.00",    自筹金额
            "short_loan_interest": "-12.30",   短贷利息
            "return_money": "12.50",           赎楼返还款
            "default_interest": "0.00",        罚息
            "overdue_money": "0.00",           逾期金额
            "other_money": "0.00"             其他
            },
            "fund_channel": [                  资金渠道信息
            {
            "fund_channel_name": "自有资金",      资金渠道
            "money": "1000.00",                   垫资金额
            "actual_account_money": null,         实际入账金额
            "is_loan_finish": 0                    入账状态 0未完成  1已完成
            },
            {
            "fund_channel_name": "永安",
            "money": "1000.00",
            "actual_account_money": null,
            "is_loan_finish": 1
            }
            ],
            "status_info": {        各种需要用到的其他字段
            "guarantee_fee_status": 2,     （担保费）收费状态 1未收齐 2已收齐
            "loan_money_status": 1,         银行放款入账状态 1待入账 2待复核 3已复核 4驳回待处理
            "instruct_status": 3,           指令状态（1待申请 2待发送 3已发送）
            "is_loan_finish": 1,             银行放款是否完成 0未完成 1已完成
            "loan_money": "4200000.00",      渠道实际入账总计
            "com_loan_money": null,          垫资总计
            "is_comborrower_sell": 1       是否卖方有共同借款人 0否 1是
            }
          }
     */

    public function channelsInfo(){
        $orderSn = input('order_sn');
        if(empty($orderSn)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '订单编号不能为空!');
        try{
            $returnInfo = [];
            //基本信息
            $returnInfo['basic_information'] = OrderComponents::orderJbInfo($orderSn);
            //房产信息
            $resInfo = OrderComponents::showEstateList($orderSn,'estate_name,estate_region,estate_area,estate_certtype,estate_certnum,house_type');
            $newStageArr =  dictionary_reset((new Dictionary)->getDictionaryByType('PROPERTY_TYPE'));
            if($resInfo){
                foreach($resInfo as &$val){
                    $val['estate_certtype_str'] = $newStageArr[$val['estate_certtype']] ? $newStageArr[$val['estate_certtype']]:'';
                }
            }
            $returnInfo['estate_info'] = $resInfo;
            //卖方信息(转让方)
            $resInfo = OrderComponents::showCustomerInfo($orderSn,'cname,ctype,certtype,certcode,mobile,is_guarantee',false,0,false);
            $newStageArr =  dictionary_reset((new Dictionary)->getDictionaryByType('CERTTYPE'));
            if($resInfo){
                foreach($resInfo as &$val){
                    $val['certtype_str'] = $newStageArr[$val['certtype']] ? $newStageArr[$val['certtype']]:'';
                }
            }
            $returnInfo['seller_info'] = $resInfo;
            //卖方共同借款人
            $resInfo = OrderComponents::showCustomerInfo($orderSn,'cname,ctype,certtype,certcode,mobile,is_guarantee',false,1,false);
            $newStageArr =  dictionary_reset((new Dictionary)->getDictionaryByType('CERTTYPE'));
            if($resInfo){
                foreach($resInfo as &$val){
                    $val['certtype_str'] = $newStageArr[$val['certtype']] ? $newStageArr[$val['certtype']]:'';
                }
            }
            $returnInfo['borrower_info'] = $resInfo;
            //风控初审问题汇总
            $returnInfo['preliminary_question'] = OrderComponents::showPreliminary($orderSn);
            //风控提醒注意事项
            $returnInfo['needing_attention'] = OrderComponents::showNeedAtten($orderSn);
            //欠款及出账金额 => 原按揭信息
            $returnInfo['arrears_info'] = OrderComponents::showArrearsInfo($orderSn,'mortgage_type,organization,interest_balance','ORIGINAL');
            //预录赎楼还款账户,过账账户，汇款账户
            $resInfo = OrderComponents::showGuaranteeBank($orderSn,'type,bankaccount,accounttype,bankcard,openbank','1,3,4');
            $newStageArr =  dictionary_reset((new Dictionary)->getDictionaryByType('JYDB_ACCOUNT_TYPE'));
            if($resInfo){
                foreach($resInfo as &$val){
                    $val['accounttype_str'] = $newStageArr[$val['accounttype']] ? $newStageArr[$val['accounttype']]:'';
                }
            }
            $returnInfo['reimbursement_info'] = $resInfo;
            //费用入账
            $returnInfo['cost_account'] = OrderComponents::showChargeList($orderSn);
            //资金渠道信息
            $returnInfo['fund_channel'] = OrderComponents::fundChannel($orderSn,'fund_channel_name,money,actual_account_money,is_loan_finish');
            //查询出各种状态
            $returnInfo['status_info'] = OrderComponents::showStstusInfo($orderSn);

            return $this->buildSuccess($returnInfo);
        }catch (\Exception $e){
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '查询失败!');
        }
    }

    /**
     * @api {post} admin/CashBusiness/channelsSend 指令发送[admin/CashBusiness/channelsSend]
     * @apiVersion 1.0.0
     * @apiName channelsSend
     * @apiGroup CashBusiness
     * @apiSampleRequest admin/CashBusiness/channelsSend
     *
     *
     * @apiParam {int}  id   订单资金渠道表id
     * @apiParam {string}  order_sn   订单编号
     * @apiParam {int}  type   1申请发送 2确认发送 3撤回发送
     */

    public function channelsSend(){
        $channelId = input('id');
        $type = input('type');
        $orderSn = input('order_sn');
        if(empty($channelId) || empty($type) || empty($orderSn)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '参数不能为空!');
        //try{
            //渠道指令状态
            $guaranteeInfo = OrderFundChannel::where('id',$channelId)->field('instruct_status')->find();
            if($type == 1){
                //判断担保费是否已经收齐，未收齐则不能申请发送
                if($guaranteeInfo['instruct_status'] != 1) return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '指令状态为待申请，才能申请发送!');
                OrderFundChannel::where('id',$channelId)->update(['instruct_status' => 2]);
                $msg = "申请发送成功";
            }elseif ($type == 2){
                if($guaranteeInfo['instruct_status'] != 3) return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '指令状态为待发送，才能确认发送!');
                OrderFundChannel::where('id',$channelId)->update(['instruct_status' => 4]);
                //判断是否所有的渠道指令状态都发送成功
                $instructStatusArr = OrderFundChannel::where('order_sn',$orderSn)->where('fund_channel_id','<>',1)->column('instruct_status');
                $uniqueStatus = array_unique($instructStatusArr);
                if(count($uniqueStatus) == 1){ //更改主指令状态为已发送
                    OrderGuarantee::where('order_sn',$orderSn)->update(['instruct_status' => 3]);
                }
                $msg = "确认发送成功";
            }elseif ($type == 3){
                if($guaranteeInfo['instruct_status'] != 4) return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '指令状态为已发送，才能撤回发送!');
                OrderFundChannel::where('id',$channelId)->update(['instruct_status' => 3]);
                //更改主指令状态为待发送
                OrderGuarantee::where('order_sn',$orderSn)->update(['instruct_status' => 2]);
                $msg = "撤回发送成功";
            }
            /*添加订单操作记录*/
            //根据订单号查询出订单状态
            $stageInfo = Order::getOne(['order_sn' => $orderSn],'stage');
            if(strlen($stageInfo['stage']) == 4){
                $operate = $stage = show_status_name($stageInfo['stage'],'ORDER_JYDB_STATUS');
            }else{
                $operate = $stage = show_status_name($stageInfo['stage'],'ORDER_JYDB_FINC_STATUS');
            }
            $operate_node = $this->userInfo['name']."发送指令";
            $operate_det = $this->userInfo['deptname'].'=>'.$this->userInfo['name']."发送指令=>".$msg;
            $operate_reason = '';
            $stage_code = $stageInfo['stage'];
            $operate_table = 'order';
            OrderComponents::addOrderLog($this->userInfo,$orderSn, $stage, $operate,$operate_node,$operate_det,$operate_reason,$stage_code,$operate_table);
            return $this->buildSuccess($msg);
        //}catch (\Exception $e){
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '发送失败!');
        //}
    }



}