<?php

namespace app\model;

use think\Model;
use app\util\Tools;

class Customer extends Model {

    protected $autoWriteTimestamp = true;
    protected $createTime = 'create_time';

    /**
     * 根据条件获取用户信息
     * @return array
     * @throws \think\db\exception\DataNotFoundException
     * @param $where 查询条件  $field查询字段
     * @author zhongjiaqi 4.18
     */
    public function getcusinfoBywhere($where = [], $field = '') {
        $data = $this->where($where)->field($field)->select();
        return $data = Tools::buildArrFromObj($data);
    }

    /**
     * 根据条件判断是否已经存在用户或企业
     * @return bool
     * @throws \think\db\exception\DataNotFoundException
     * @param $cname 用户/企业名称  $mobile 联系电话
     * @author zhongjiaqi 4.19
     */
    public function checksameCustomer($cname, $mobile) {
        $where = [
            'status' => 1,
            'cname' => $cname,
            'mobile' => $mobile
        ];
        return $flag = $this->where($where)->count() > 0 ? FALSE : TRUE;
    }

    /**
     * 新增用户
     * @return bool
     * @throws \think\db\exception\DataNotFoundException
     * @param $data 与数据库字段对应的数组集合
     * @author zhongjiaqi 4.19
     */
    public function addCustomer($data) {
        $res = $this->save($data);
        return $flag = $res > 0 ? TRUE : FALSE;
    }

    /**
     * 更新用户
     * @return bool
     * @throws \think\db\exception\DataNotFoundException
     * @param $data 与数据库字段对应的数组集合  $cusid 需要更新数据的用户id
     * @author zhongjiaqi 4.20
     */
    public function updateCustomer($cusid, $data) {
        $res = $this->where('id', $cusid)->update($data);
        return $flag = $res > 0 ? TRUE : FALSE;
    }

    /**
     * 筛选重复证件号
     * @return bool
     * @throws \think\db\exception\DataNotFoundException
     * @param $data 证件数据集  $cusid 被筛选用户
     * @author zhongjiaqi 4.20
     */
    public function filterSamecard($cusid, $data) {
        $cuscardinfo = $this->where('id', $cusid)->field('certtype,certcode,certother')->find();
        if (!empty($cuscardinfo['certother'])) {
            $oldarray = $Newarray = json_decode($cuscardinfo['certother'], TRUE);
        } else {
            $oldarray = [];
            $Newarray = [];
        }
        $Newarray[] = ['certcode' => $cuscardinfo['certcode'], 'certtype' => $cuscardinfo['certtype']];
        foreach ($Newarray as $key => $value) {
            foreach ($data as $k => $v) {
                if ($v['certtype'] == $value['certtype']) {
                    unset($data[$k]);
                }
            }
        }
        if (count($data) == 0) {
            return FALSE;
        } else {
            $newdata = json_encode(array_merge($oldarray, $data), JSON_UNESCAPED_UNICODE); // 重组新数据
            if ($this->UpdateCustomer($cusid, ['certother' => $newdata])) {
                return array_values($data);
            }
        }
    }

}
