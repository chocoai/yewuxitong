<?php
/**
 * 登录登出
 * @since   2017-11-02
 * @author  zhaoxiang <zhaoxiang051405@gmail.com>
 */

namespace app\admin\controller;

use app\model\SystemAuthGroupAccess;
use app\model\SystemAuthRule;
use app\model\SystemMenu;
use app\model\SystemUser;
use app\model\SystemUserData;
use app\model\SystemAuthGroup;
use app\util\ReturnCode;
use app\util\Tools;

class Login extends Base
{

    /**
     * @api {post} admin/Login/index 用户登录[admin/Login/index]
     * @apiVersion 1.0.0
     * @apiName index
     * @apiGroup Login
     * @apiSampleRequest admin/Login/index
     *
     *
     * @apiParam {string} username    用户名
     * @apiParam {string} password    密码
     *
     * @apiSuccess {string} headImg    用户图像
     * @apiSuccess {int} id    用户id
     *@apiSuccess {string} username    用户名
     *@apiSuccess {string} apiAuth    api接口权限验证秘钥
     *
     */
    public function index()
    {
        $username = input('username');
        $password = input('password');
        if (!$username) {
            return $this->buildFailed(ReturnCode::LOGIN_ERROR, '缺少用户名!');
        }
        if (!$password) {
            return $this->buildFailed(ReturnCode::LOGIN_ERROR, '缺少密码!');
        } else {
            $password = Tools::userMd5($password);
        }
        $userInfo = SystemUser::get(['num' => $username, 'password' => $password]);
        if (!empty($userInfo)) {
            if ($userInfo['status']) {
                //更新用户数据
                $userData = SystemUserData::get(['uid' => $userInfo['id']]);
                $data = [];
                if ($userData) {
                    $userData->logintimes++;
                    $userData->lastloginip = $this->request->ip(1);
                    $userData->lastlogintime = time();
//                    $return['headImg'] = $userData['headImg'];
                    $userData->save();
                } else {
                    $data['logintimes'] = 1;
                    $data['uid'] = $userInfo['id'];
                    $data['lastloginip'] = $this->request->ip(1);
                    $data['lastlogintime'] = time();
//                    $data['headImg'] = '';
                    SystemUserData::create($data);
                }
            } else {
                return $this->buildFailed(ReturnCode::LOGIN_ERROR, '用户已被封禁，请联系管理员');
            }
        } else {
            return $this->buildFailed(ReturnCode::LOGIN_ERROR, '用户名密码不正确');
        }

        $return['access'] = [];
        $isSupper = Tools::isAdministrator($userInfo['id']);
        $access = [];
        if ($isSupper) {
            $access = SystemMenu::all(['hide' => 1]);
            $access = Tools::buildArrFromObj($access);
            $return['access'] = array_values(array_filter(array_column($access, 'url')));
            $menu_ids = array_column($access,'id');
        } else {
            $groups = SystemAuthGroupAccess::all(['uid' => $userInfo['id']]);
            if (!empty($groups)) {
                $userInfo['group'] = array_unique(array_column(Tools::buildArrFromObj($groups),'groupid'));
                $access = SystemAuthRule::whereIn('groupid', $userInfo['authorize'])->select();
                $access = Tools::buildArrFromObj($access);
                $return['access'] = array_values(array_unique(array_column($access, 'url')));
                $menu_ids = array_column($access,'menu_id');
            }
        }
        $apiAuth = md5(uniqid() . time());
        cache('Login:' . $apiAuth, json_encode($userInfo), config('apiBusiness.ONLINE_TIME'));
        cache('Login:' . $userInfo['id'], $apiAuth, config('apiBusiness.ONLINE_TIME'));
        //查询菜单
        if(!$menu_ids){
            return $this->buildFailed(ReturnCode::LOGIN_ERROR, '没有权限登录系统，请联系系统管理员');
        }
        $where = [
            'id'=>['in',$menu_ids],
            'hide'=>1,
            'level'=>['in',[1, 2, 3,4]],
            'system_id'=>1
        ];
        $menus = SystemMenu::getMenuList($where);
        $menuarr = Tools::buildArrFromObj($menus);
        $return['menuList'] = listToTree($menuarr, 'id', 'fid', 'children'); //导航菜单
        $return['id'] = $userInfo['id'];
        $return['username'] = $userInfo['name'];
        $return['apiAuth'] = $apiAuth;
        return $this->buildSuccess($return, '登录成功');
    }

    /**
     * @api {get} admin/Login/logout 退出登录[admin/Login/logout]
     * @apiVersion 1.0.0
     * @apiName logout
     * @apiGroup Login
     * @apiSampleRequest admin/Login/logout
     *
     *
     * @apiParam {string} apiAuth    api接口权限验证秘钥
     *
     */
    public function logout()
    {
        $ApiAuth = $this->request->header('ApiAuth');
        cache('Login:' . $ApiAuth, null);
        cache('Login:' . $this->userInfo['id'], null);

        return $this->buildSuccess(['ApiAuth' => $ApiAuth], '登出成功');
    }

}
