<?php
/**
 * Created by PhpStorm.
 * User: 赵光帅
 * Date: 2018/4/25
 * Time: 16:57
 */
namespace app\model;
use think\Db;

class Cheque extends Base {

    /* @author 赵光帅
     * 支票列表查询
     * @Param {arr} $map    搜索条件
     * @Param {int} $startnum    分页起始条数
     * @Param {int} $pageSize    每页数量
     * */

    public static function checkList($map,$page,$pageSize){
           $res = self::alias('a')
                ->field('id,order_sn,create_time,cheque_num,bankname,status,use_time,user,owner,owner_time')
                ->where($map)
                ->order('create_time desc')
                ->paginate(array('list_rows' => $pageSize, 'page' => $page))
                ->toArray();
           foreach ($res['data'] as $k => $v){
               //领取人
               $res['data'][$k]['owner'] = self::getUserName($v['owner']);
               //使用人
               $res['data'][$k]['user'] = self::getUserName($v['user']);
           }
           return $res;
    }

    /* @author 赵光帅
     * 模糊查询人员及其部门列表
     * @Param {arr} $map    搜索条件
     * @Param {int} $startnum    分页起始条数
     * @Param {int} $pageSize    每页数量
     * */

    public static function showUserinfo($peopleGroup,$searchText,$page,$pageSize){
        if($peopleGroup == 1){
            $res = self::alias('a')
                ->join('system_user b','a.owner=b.id','LEFT')
                ->field('b.id,b.name,b.deptname')
                ->where('a.owner','<>','not null')
                ->where('b.name','like',"%{$searchText}%")
                ->order('a.create_time desc')
                ->paginate(array('list_rows' => $pageSize, 'page' => $page))
                ->toArray();
                //->fetchSql(true)
               // ->select();
            $res = unique($res['data']);
        }elseif ($peopleGroup == 2){
            $res = self::alias('a')
                ->join('system_user b','a.user=b.id','LEFT')
                ->field('b.id,b.name,b.deptname')
                ->where('a.user','NEQ','not null')
                ->where('b.name','like',"%{$searchText}%")
                ->order('a.create_time desc')
                ->paginate(array('list_rows' => $pageSize, 'page' => $page))
                ->toArray();
            $res = unique($res['data']);
        }else{
            $res1 = self::alias('a')
                ->join('system_user b','a.owner=b.id','LEFT')
                ->field('b.id,b.name,b.deptname')
                ->where('a.owner','<>','not null')
                ->where('b.name','like',"%{$searchText}%")
                ->order('a.create_time desc')
                ->paginate(array('list_rows' => $pageSize, 'page' => $page))
                ->toArray();

            $res2 = self::alias('a')
                ->join('system_user b','a.user=b.id','LEFT')
                ->field('b.id,b.name,b.deptname')
                ->where('a.user','NEQ','not null')
                ->where('b.name','like',"%{$searchText}%")
                ->order('a.create_time desc')
                ->paginate(array('list_rows' => $pageSize, 'page' => $page))
                ->toArray();
            $res = unique(array_merge($res1['data'],$res2['data']));
        }


        return $res;
    }

    /*
     * @author 赵光帅
     * 根据用户id获取用户名称
     * @Param {int} $id    用户id
     * */
    public static function getUserName($id)
    {
        return Db::name('system_user')->where('id',$id)->value('name');

    }

    /*
     * @author 赵光帅
     * 获取器 对status(支票状态)字段的转化
     * 支票状态-1删除 1库存中 2领取待使用 3转让待确认 4使用待核销 5作废待核销 6使用已核销 7作废已核销
     * */
    public function getStatusAttr($value)
    {
        $status = [-1=>'删除',1=>'库存中',2=>'领取待使用',3=>'转让待确认',4=>'使用待核销',5=>'作废待核销',6=>'使用已核销',7=>'作废已核销'];
        return $status[$value];
    }


}