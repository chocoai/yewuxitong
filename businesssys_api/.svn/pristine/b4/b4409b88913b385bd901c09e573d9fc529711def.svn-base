<?php

/* 核卡控制器 */

namespace app\admin\controller;

use think\Db;
use app\model\Order;
use app\model\OrderGuaranteeBank;
use app\model\OrderVerifyCard;
use app\model\OrderVerifyCardRecord;
use app\model\SystemUser;
use app\util\OrderComponents;
use app\util\ReturnCode;

class Nuclearcard extends Base {

    private $order;
    private $orderguaranteebank;
    private $orderverifycard;
    private $orderverifycardrecord;
    private $systemuser;

    public function _initialize() {
        parent::_initialize();
        $this->order = new Order();
        $this->orderguaranteebank = new OrderGuaranteeBank();
        $this->orderverifycard = new OrderVerifyCard();
        $this->systemuser = new SystemUser();
        $this->orderverifycardrecord = new OrderVerifyCardRecord();
    }

    /**
     * @api {get} admin/Nuclearcard/nuclearcardList 核卡列表[admin/Nuclearcard/nuclearcardList]
     * @apiVersion 1.0.0
     * @apiName nuclearcardList
     * @apiGroup Nuclearcard
     * @apiSampleRequest admin/Nuclearcard/nuclearcardList
     *
     * @apiParam {int} create_uid    人员id
     * @apiParam {int} subordinates    1含下属 0不含下属
     * @apiParam {int} type     订单类型
     * @apiParam {int} account_type     账号类型
     * @apiParam {int} account_status    账号状态（1正常 2冻结 3锁卡 4挂失 5注销）
     * @apiParam {int} verify_card_status    核卡状态（0待核卡 1待财务复核 2驳回待处理 3已完成）
     * @apiParam {int} keywords     关键词
     * @apiParam {int} page    页码
     * @apiParam {int} size    条数
     *
     * @apiSuccess {string} order_sn    业务单号
     * @apiSuccess {string} estate_name    房产名称
     * @apiSuccess {string} type_text    订单类型
     * @apiSuccess {string} account_type_text    账号类型
     * @apiSuccess {string} bankcard    银行卡号
     * @apiSuccess {string} bankaccount    银行户名
     * @apiSuccess {string} openbank    开户银行
     * @apiSuccess {string} verify_card_status_text    核卡状态
     * @apiSuccess {string} account_status_text    账号状态
     * @apiSuccess {string} check_time    最新查账时间
     * @apiSuccess {string} financing_manager    理财经理
     * @apiSuccess {int} count    总条数
     */
    public function nuclearcardList() {
        $limit = $this->request->get('size', config('apiAdmin.ADMIN_LIST_DEFAULT'));
        $page = $this->request->get('page', 1);
        $pageSize = $limit ? $limit : config('paginate')['list_rows'];

        $create_uid = $this->request->get('create_uid', '');
        $subordinates = $this->request->get('subordinates', 0);
        $type = $this->request->get('type', '');
        $account_type = $this->request->get('account_type', '');
        $account_status = $this->request->get('account_status', '');
        $verify_card_status = $this->request->get('verify_card_status', '');
        $keywords = $this->request->get('keywords', '');
        //查询条件组装
        $where = [];
        $userId = $this->userInfo['id'];
        if ($create_uid) {
            if ($subordinates == 1) {
                $userStr = SystemUser::getOrderPowerStr($userId);
            } else {
                $userStr = $userId;
            }
            $where['o.financing_manager_id'] = ['in', $userStr];
        }
        $type && $where['o.type'] = $type;
        $account_type && $where['o.type'] = $account_type;
        $account_status && $where['y.account_status'] = $account_status;
        $verify_card_status && $where['y.verify_card_status'] = $verify_card_status;
        $keywords && $where['x.order_sn|e.estate_name|x.bankcard'] = ['like', "%{$keywords}%"];
        $where['x.status'] = 1;
        $where['x.type'] = array('neq', '6');
        $field = "x.id,x.order_sn,x.bankaccount,x.bankcard,x.openbank,x.type as account_type,y.check_time,y.verify_card_status,y.account_status,o.type,o.financing_manager_id,e.estate_name";
        $creditList = $this->orderguaranteebank->alias('x')
                        ->join('__ORDER__ o', 'o.order_sn=x.order_sn')
                        ->join('__ESTATE__ e', 'e.order_sn=x.order_sn')
                        ->join('__ORDER_VERIFY_CARD__ y', 'y.order_sn=x.order_sn', 'left')
                        ->where($where)->field($field)
                        ->order('x.create_time', 'DESC')
                        ->group('x.id')
                        ->paginate(array('list_rows' => $pageSize, 'page' => $page))->toArray();
        if (!empty($creditList['data'])) {
            foreach ($creditList['data'] as &$value) {
                $value['type_text'] = $this->order->getType($value['type']); //订单类型
                $value['financing_manager'] = $this->systemuser->where('id', $value['financing_manager_id'])->value('name'); //理财经理
                $value['account_status_text'] = $this->orderverifycard->getAccountstatus($value['account_status']); //账号状态
                $value['verify_card_status_text'] = $this->orderverifycard->getAccountstatus($value['verify_card_status']); //核卡状态
                $value['account_type_text'] = $this->orderverifycard->getAccounttype($value['account_type']); //账号类型
                $value['check_time'] = empty($value['check_time']) ? '' : date('Y-m-d', strtotime($value['check_time'])); //最新查账时间
            }
        }
        return $this->buildSuccess(['list' => $creditList['data'], 'count' => $creditList['total']]);
    }

    /**
     * @api {get} admin/Nuclearcard/nuclearDetail 核卡详情页[admin/Nuclearcard/nuclearDetail]
     * @apiVersion 1.0.0
     * @apiName nuclearDetail
     * @apiGroup Nuclearcard
     * @apiSampleRequest admin/Nuclearcard/nuclearDetail
     *
     * @apiParam {int} id    卡号id
     *
     * @apiSuccess {array} nucleardata    核卡信息
     * @apiSuccess {string} accounttype_text    账户类型
     * @apiSuccess {string} accounttype    账户类型
     * @apiSuccess {string} bankaccount    银行户名
     * @apiSuccess {string} openbank    开户银行
     * @apiSuccess {string} bankcard    银行卡号
     *
     * @apiSuccess {array} nuclearentry    核卡录入信息
     * @apiSuccess {string} card_type    卡号类型
     * @apiSuccess {string} cyber_bank    网银
     * @apiSuccess {string} telephone_bank    手机银行
     * @apiSuccess {string} mobile_bank    电话银行
     * @apiSuccess {string} security_account    证券账号
     * @apiSuccess {string} credit_card    信用卡
     * @apiSuccess {string} verify_card_time    核卡时间
     * @apiSuccess {string} verify_card_name    核卡人员
     * @apiSuccess {array} verify_card_data   核卡资料
     * @apiSuccess {string} remark    备注
     *
     * @apiSuccess {array} nuclearrecord    核卡查询记录
     * @apiSuccess {string} account_balance    账号余额
     * @apiSuccess {string} account_status    账号状态
     * @apiSuccess {string} check_time    查询时间
     * @apiSuccess {string} create_name    操作人员
     * @apiSuccess {string} create_deptname    所在部门
     * @apiSuccess {string} remark    备注
     *
     */
    public function nuclearDetail() {
        $id = $this->request->get('id', '');
        if ($id) {
            $userInfo['id'] = $this->userInfo['id'];
            $userInfo['id']=1;
            if (empty($userInfo['id']))
                return $this->buildFailed(ReturnCode::UNKNOWN, '登录过期，请重新登录');
            //核卡信息
            $nucleardata = OrderComponents::nuclearInfo($id);
            //核卡录入信息
            $nuclearentry = OrderComponents::nuclearentryinfo($id);
            //出账申请记录
            $nuclearrecord = OrderComponents::nuclearInfoRecord($id);
            return $this->buildSuccess(['nucleardata' => $nucleardata, 'nuclearentry' => $nuclearentry, 'nuclearrecord' => $nuclearrecord]);
        } else {
            return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '参数有误');
        }
    }

    /**
     * @api {post} admin/Nuclearcard/addnuclearCarddata 录入核卡信息[admin/Nuclearcard/addnuclearCarddata]
     * @apiVersion 1.0.0
     * @apiName addnuclearCarddata
     * @apiGroup Nuclearcard
     * @apiSampleRequest admin/Nuclearcard/addnuclearCarddata
     *
     * @apiParam {int} order_guarantee_bank_id    核卡id
     * @apiParam {int}  card_type  卡号类型（1.个人 2.公司）
     * @apiParam {int}  cyber_bank  网银（0.未开通 1.已开通 2.已关闭）
     * @apiParam {int}  mobile_bank  手机银行（0.未开通 1.已开通 2.已关闭）
     * @apiParam {int}  telephone_bank  电话银行（0.未开通 1.已开通 2.已关闭）
     * @apiParam {int}  security_account  证券账号（0.未绑定 1.已绑定 2.已解绑）
     * @apiParam {int}  credit_card  信用卡（0.未绑定 1.已绑定 2.已解绑）
     * @apiParam {datatime}  verify_card_time  核卡时间
     * @apiParam {array}   verify_card_data  核卡资料
     * @apiParam {int}   remark  备注说明
     *
     */
    public function addnuclearCarddata() {
        $data = $this->request->Post('', null, 'trim');
        $msg = $this->validate($data, 'AddnuclearCarddata');
        if ($msg !== true)
            return $this->buildFailed(ReturnCode::PARAM_INVALID, $msg);
        $userInfo['id'] = $this->userInfo['id'];
        if (empty($userInfo['id']))
            return $this->buildFailed(ReturnCode::UNKNOWN, '登录过期，请重新登录');
        $bankinfo = $this->orderguaranteebank->where(['id' => $data['order_guarantee_bank_id'], 'status' => 1])->field('order_sn,type')->find();
        if (empty($bankinfo))
            return $this->buildFailed(ReturnCode::RECORD_NOT_FOUND, '此卡信息已经不存在！');
        $user = $this->systemuser->where('id', $userInfo['id'])->field('deptid,deptname,name')->find(); //获取用户信息
        $orderstatus = $this->order->where('order_sn', $bankinfo['order_sn'])->value('stage'); //获取当前主订单状态
        $data['verify_card_data'] = implode(',', $data['verify_card_data']);
        $data = array_merge($data, ['verify_card_name' => $user['name'], 'create_uid' => $userInfo['id'],'order_sn'=>$bankinfo['order_sn']]);
        Db::startTrans();
        try {
            if ($this->orderverifycard->save($data)) {
                //加订单操作记录
                $userInfo['deptid'] = $user['deptid'];
                $userInfo['deptname'] = $user['deptname'];
                $type_text = $this->orderverifycard->getAccounttype($bankinfo['type']); //账号类型
                $operate_det = '录入核卡信息：核卡员-' . $user['name'] . ",录入一张" . $type_text . "的核卡信息";
                $operate_table = 'order_verify_card';
                $operate_table_id = $this->orderverifycard->getLastInsID();
                if (OrderComponents::addOrderLog($userInfo, $order_sn = $bankinfo['order_sn'], $stage = show_status_name($orderstatus, 'ORDER_JYDB_STATUS'), $operate = '待核卡', '录入核卡信息', $operate_det, $operate_reason = '', 1014, $operate_table, $operate_table_id)) {
                    Db::commit();
                    return $this->buildSuccess();
                }
                Db::rollback();
                return $this->buildFailed(ReturnCode::UPDATE_FAILED, '录入核卡信息操作记录新增失败！');
            }
            Db::rollback();
            return $this->buildFailed(ReturnCode::UPDATE_FAILED, '核卡信息录入失败！');
        } catch (Exception $exc) {
            return $this->buildFailed(ReturnCode::EXCEPTION, '系统繁忙，请稍后重试!' . $exc->getMessage());
        }
    }

}
