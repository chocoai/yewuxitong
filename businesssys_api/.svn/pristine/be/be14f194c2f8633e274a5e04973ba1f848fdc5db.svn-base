<?php

/* 客户信息接口控制器 */

namespace app\admin\controller;

use app\model\Customer as modelCustomer;
use app\model\Dictionary;
use app\model\CreditInquiry;
use app\util\ReturnCode;

class Customer extends Base {

    private $modelCustomer;
    private $dictionary;
    private $creditinquiry;

    public function _initialize() {
        parent::_initialize();
        $this->modelCustomer = new modelCustomer();
        $this->dictionary = new Dictionary();
        $this->creditinquiry = new CreditInquiry();
    }

    /**
     * @api {post} admin/Customer/addcreditCustomer 新增用户[admin/Customer/addcreditCustomer]
     * @apiVersion 1.0.0
     * @apiName addcreditCustomer
     * @apiGroup Credit
     * @apiSampleRequest admin/Customer/addcreditCustomer
     *
     * @apiParam {int} gender    性别
     * @apiParam {array} certdata    证件信息
     * @apiParam {string} cname    用户/企业名称
     * @apiParam {int} ctype    所属类型 ：(个人、企业)
     * @apiParam {int} mobile    联系电话 
     * @apiParam {int} financing_manager_id    理财经理
     *
     */
    public function addcreditCustomer() {
        $adddata = $this->request->Post();
        $adddata['gender'] = $adddata['ctype'] == 1 ? $this->request->post('gender') : '';
        $getdata = $this->creditinquiry->dealwithCarddata($adddata['certdata']);
        $adddata['certtype'] = $getdata['certtype'];
        $adddata['certcode'] = $getdata['certcode'];
        $adddata['certother'] = $getdata['certother'];
        unset($adddata['certdata']);
        if (!empty($adddata['cname']) && !empty($adddata['mobile']) && !empty($adddata['financing_manager_id'])) {
            if ($this->modelCustomer->checksameCustomer($adddata['cname'], $adddata['mobile'])) {
                if ($this->modelCustomer->addCustomer($adddata))
                    return $this->buildSuccess();
                return $this->buildFailed(ReturnCode::ADD_FAILED, '客户添加失败');
            } else {
                return $this->buildFailed(ReturnCode::DATA_EXISTS, '系统已存在客户!');
            }
        } else {
            return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '有必填项未填写!');
        }
    }

    /**
     * @api {get} admin/Customer/getCusinfo 根据手机号自动匹配用户信息[admin/Customer/getCusinfo]
     * @apiVersion 1.0.0
     * @apiName getCusinfo
     * @apiGroup Customer
     * @apiSampleRequest admin/Customer/getCusinfo
     *
     * @apiParam {int} mobile    手机号
     *
     * @apiSuccess {array} selectdata    用户名称下拉框数据
     * @apiSuccess {array} carddata    证件信息
     * @apiSuccess {string} financing_manager_name    理财经理
     *
     */
    public function getCusinfo() {
        $mobile = $this->request->get('mobile', '');
        $where = [
            'status' => 1,
        ];
        if ($mobile) {
            $where['mobile'] = ['like', "%{$mobile}%"];
        }
        $field = "id,cname,certcode,mobile,financing_manager_id,certtype,certother";
        $res = $this->modelCustomer->getcusinfoBywhere($where, $field);
        if ($res) {
            foreach ($res as $key => $value) {
                $res[$key]['selectdata'] = "(" . $value['cname'] . ")" . $value['mobile']; // 用户列表数据组装
                $res[$key]['certdata'][] = ['certcode' => $value['certcode'], 'certtype' => $value['certtype'], 'certname' => $this->dictionary->getValnameByCode('CERTTYPE', $value['certtype'])];
                $res[$key]['financing_manager_name'] = '王大拿';
                // 理财经理 ************待完成**********
                if (!empty($value['certother'])) {
                    foreach (json_decode($value['certother'], TRUE) as $k => $v) {
                        $res[$key]['certdata'][] = ['certcode' => $v['certcode'], 'certtype' => $v['certtype'], 'certname' => $this->dictionary->getValnameByCode('CERTTYPE', $v['certtype'])];
                    }
                }
            }
        }
        return $this->buildSuccess($res);
    }

    /**
     * @api {post} admin/Customer/addCard 新增证件[admin/Customer/addCard]
     * @apiVersion 1.0.0
     * @apiName addCard
     * @apiGroup Customer
     * @apiSampleRequest admin/Customer/addCard
     *
     * @apiParam {int} id    用户id
     * @apiParam {array} certdata    证件信息
     *
     */
    public function addCard() {
        $adddata = $this->request->Post();
        if (!empty($adddata['certdata']) && $adddata['id']) {
            if ($this->modelCustomer->filterSamecard($adddata['id'], $adddata['certdata'])) {
                foreach ($adddata['certdata'] as $key => $value) {
                    $adddata['certdata'][$key]['certname'] = $this->dictionary->getValnameByCode('CERTTYPE', $value['certtype']);
                }
                return $this->buildSuccess($adddata['certdata']);
            }
            return $this->buildFailed(ReturnCode::UPDATE_FAILED, '新增证件失败，请确定是否重复提交相同证件!');
        } else {
            return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '参数有误!');
        }
    }

}
