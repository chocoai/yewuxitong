<?php
/**
 * 目录管理
 * @since   2018-01-16
 * @author
 */

namespace app\admin\controller;

use app\model\SystemMenu;
use app\util\ReturnCode;
use app\util\Tools;

class Menu extends Base
{

    /**
     * @api {get} admin/Menu/index 获取菜单列表[admin/Menu/index]
     * @apiVersion 1.0.0
     * @apiName index
     * @apiGroup Menu
     * @apiSampleRequest admin/Menu/index
     *
     */
    public function index()
    {
        $list = (new SystemMenu)->where([])->order('sort', 'ASC')->select();
        $list = Tools::buildArrFromObj($list);
        $list = formatTree(listToTree($list));

        return $this->buildSuccess([
            'list' => $list,
        ], '登录成功');
    }

    /**
     * @api {post} admin/Menu/add 新增菜单[admin/Menu/add]
     * @apiVersion 1.0.0
     * @apiName add
     * @apiGroup Menu
     * @apiSampleRequest admin/Menu/add
     * @apiParam {array} url    菜单url
     *
     */
    public function add()
    {
        $postData = $this->request->post();
        if ($postData['url']) {
            $postData['url'] = 'admin/' . $postData['url'];
        }
        $res = SystemMenu::create($postData);
        if ($res === false) {
            return $this->buildFailed(ReturnCode::DB_SAVE_ERROR, '操作失败');
        } else {
            return $this->buildSuccess([]);
        }
    }

    /**
     * @api {get} admin/Menu/changeStatus 菜单状态编辑[admin/Menu/changeStatus]
     * @apiVersion 1.0.0
     * @apiName changeStatus
     * @apiGroup Menu
     * @apiSampleRequest admin/Menu/changeStatus
     * @apiParam {int} id        菜单id
     * @apiParam {int} status    菜单状态
     *
     */
    public function changeStatus()
    {
        $id = $this->request->get('id');
        $status = $this->request->get('status');
        $res = SystemMenu::update([
            'id' => $id,
            'hide' => $status,
        ]);
        if ($res === false) {
            return $this->buildFailed(ReturnCode::DB_SAVE_ERROR, '操作失败');
        } else {
            return $this->buildSuccess([]);
        }
    }

    /**
     * @api {post} admin/Menu/edit 编辑菜单[admin/Menu/edit]
     * @apiVersion 1.0.0
     * @apiName edit
     * @apiGroup Menu
     * @apiSampleRequest admin/Menu/edit
     * @apiParam {string} url    菜单url
     *
     */
    public function edit()
    {
        $postData = $this->request->post();
        if ($postData['url']) {
            $postData['url'] = 'admin/' . $postData['url'];
        }
        $res = SystemMenu::update($postData);
        if ($res === false) {
            return $this->buildFailed(ReturnCode::DB_SAVE_ERROR, '操作失败');
        } else {
            return $this->buildSuccess([]);
        }
    }

    /**
     * @api {get} admin/Menu/del 删除菜单[admin/Menu/del]
     * @apiVersion 1.0.0
     * @apiName del
     * @apiGroup Menu
     * @apiSampleRequest admin/Menu/del
     * @apiParam {int} id    菜单id
     *
     */
    public function del()
    {
        $id = $this->request->get('id');
        if (!$id) {
            return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '缺少必要参数');
        }
        $childNum = SystemMenu::where(['fid' => $id])->count();
        if ($childNum) {
            return $this->buildFailed(ReturnCode::INVALID, '当前菜单存在子菜单,不可以被删除!');
        } else {
            SystemMenu::destroy($id);

            return $this->buildSuccess([]);
        }
    }

}
