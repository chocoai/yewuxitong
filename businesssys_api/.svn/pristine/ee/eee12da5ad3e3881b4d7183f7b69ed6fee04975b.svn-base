<?php
namespace app\admin\controller;

use app\util\ReturnCode;
use app\model\TrialFirst;
use app\model\Order;
use app\model\TrialEstate;
use app\model\TrialData;
use app\model\TrialProcess;
use app\model\TrialProcessAttachment;
use app\model\WorkflowProc;
use think\Db;

/*
 * @author 赵光帅
 * 审批列表审批流程类
 * */
class Approval extends Base {
            // @author 赵光帅
			/**
			 * @api {post} admin/Approval/show_Approval_List 审批列表[admin/Approval/show_Approval_List]
			 * @apiVersion 1.0.0
			 * @apiName show_Approval_List
			 * @apiGroup Approval
			 * @apiSampleRequest admin/Approval/show_Approval_List
			 *
			 *
			 * @apiParam {int} create_uid    人员id
			 * @apiParam {int} type    订单类型
			 * @apiParam {int} stage    订单状态
			 * @apiParam {int} estate_ecity    城市
			 * @apiParam {int} estate_district    城区
			 * @apiParam {int} search_text    关键字搜索
			 * @apiParam {int} page    页码
			 * @apiParam {int} limit    条数
			 *
			 * @apiSuccess {int} total    总条数
			 * @apiSuccess {int} per_page    每页显示的条数
             * @apiSuccess {int} current_page    当前页
             * @apiSuccess {int} last_page    总页数
             * @apiSuccess {string} order_sn    业务单号
             * @apiSuccess {int} create_time    报单时间
             * @apiSuccess {int} type     订单类型
             * @apiSuccess {int} money    订单金额
			 * @apiSuccess {string} stage    订单状态
             * @apiSuccess {string} estate_name    房产名称
             * @apiSuccess {string} estate_ecity     城市
             * @apiSuccess {string} estate_district    城区
             * @apiSuccess {string} estate_ecity     城市
             * @apiSuccess {string} estate_district    城区
			 */
	
	        public function show_Approval_List(){
	        	$create_uid = input('create_uid');
	        	$type = input('type');
	        	$stage = input('stage');
	        	$estate_ecity = input('estate_ecity');
	        	$estate_district= input('estate_district');
	        	$search_text = input('search_text');
	        	$page = input('page') ? input('page') : 1;
	        	$pageSize = input('limit') ? input('limit') : 20;
	        	$map = [];
	        	if (!empty($create_uid)) {
	        		$map['a.create_uid'] = $create_uid;
	        	}
	        	if (!empty($type)) {
	        		$map['a.type'] = $type;
	        	}
	        	if (!empty($stage)) {
	        		$map['a.stage'] = $stage;
	        	}
	        	if (!empty($estate_ecity)) {
                    $map['b.estate_ecity'] = $estate_ecity;
	        	}
	        	if (!empty($estate_district)) {
                    $map['b.estate_district'] = $estate_district;
	        	}
	        	$map['a.delete_time'] = NULL;

	        	return $this->buildSuccess(Order::approval_list($map,$search_text,$page,$pageSize));
	        	
	        	
	        }

             // @author 赵光帅
	        /**
	         * @api {post} admin/Approval/approval_Records 审批页面信息[admin/Approval/approval_Records]
	         * @apiVersion 1.0.0
	         * @apiName approval_Records
	         * @apiGroup Approval
	         * @apiSampleRequest admin/Approval/approval_Records
	         *
	         *
	         * @apiParam {string}  order_sn   订单编号
	         *
	         * @apiSuccess {string} create_time    审批记录的时间
	         * @apiSuccess {string} process_name    审批节点
	         * @apiSuccess {string} auditor_name    操作人员名称
	         * @apiSuccess {string} auditor_dept    操作人员部门
	         * @apiSuccess {string} status    操作
             * @apiSuccess {string} content    审批意见
             *
             * @apiSuccess {string} process_name    来源
             * @apiSuccess {string} item    注意事项
             * @apiSuccess {string} savename    文件名称
             * @apiSuccess {string} path    文件路径
             * @apiSuccess {string} url    文件链接地址
	         */
	        
	        public function approval_Records(){
	        	$order_sn = input('order_sn');
	        	if(empty($order_sn)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '订单编号不能为空!');
	        	//查询出审批记录
                $jlField = 'order_sn,create_time,process_name,auditor_name,auditor_dept,status,content';
	            //查询出审批记录
                $jlList = WorkflowProc::getAll(['order_sn' => $order_sn],$jlField);
                //查询出其他信息
                $qtField = 'id,order_sn,process_name,item';
                $qtList =TrialProcess::getAll(['order_sn' => $order_sn],$qtField);
                //查询组合好的其他信息
                $zhInfo = TrialProcess::show_Other_Information($qtList);

                $arrsInfo['approval_records'] = $jlList;
                $arrsInfo['other_information'] = $zhInfo;
                return $this->buildSuccess($arrsInfo);

	        }


             // @author 赵光帅
	        /**
	         * @api {post} admin/Approval/sub_Approval 提交审批[admin/Approval/sub_Approval]
	         * @apiVersion 1.0.0
	         * @apiName sub_Approval
	         * @apiGroup Approval
	         * @apiSampleRequest admin/Approval/sub_Approval
	         *
	         *
	         * @apiParam {string}  order_sn   订单编号
	         *
	         *
	         */
	        
	        public function sub_Approval(){
	        	$order_sn = input('order_sn');
	        	if(empty($order_sn)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '订单编号不能为空!');
	            
	        	 
	        	 
	        }

             // @author 赵光帅
	        /**
	         * @api {post} admin/Approval/show_Result 查询初审结果[admin/Approval/show_Result]
	         * @apiVersion 1.0.0
	         * @apiName show_Result
	         * @apiGroup Approval
	         * @apiSampleRequest admin/Approval/show_Result
	         *
	         *
	         * @apiParam {string}  order_sn   订单编号
	         *
	         * @apiSuccess {string}  order_sn   订单编号
             * @apiSuccess {float}  balance_per   负债成数
             * @apiSuccess {int}  is_normal   是否正常单
             * @apiSuccess {int}  review_rating   审查评级
             * @apiSuccess {int}  risk_rating   风险评级
             * @apiSuccess {int}  is_material   是否缺资料通过
             * @apiSuccess {int}  is_guarantee   是否提供反担保
             * @apiSuccess {int}  is_asset_prove   是否提供资产证明
             * @apiSuccess {int}  is_guarantee_estate   是否房产反担保
             * @apiSuccess {int}  is_guarantee_money   是否保证金反担保
             * @apiSuccess {int}  is_guarantee_other   是否其它方式反担保
             * @apiSuccess {float}  guarantee_money   反担保 （保证金）
             * @apiSuccess {string}  other_way   其它方式
             * @apiSuccess {int}  id     problem => 问题汇总信息id
             * @apiSuccess {string}  describe    problem => 问题描述
             * @apiSuccess {int}  status    problem => 问题状态 0未解决 1已解决
             *
             * @apiSuccess {int}  hid     houseinfo => 房产反担保数据表主键id
             * @apiSuccess {string}  estate_name    houseinfo => 房产名称
             * @apiSuccess {int}  estate_certtype    houseinfo => 产证类型
             * @apiSuccess {int}  estate_certnum     houseinfo => 产证编码
             * @apiSuccess {int}  house_type    houseinfo => 房屋类型
             * @apiSuccess {string}  estate_district    houseinfo => 所属城区
             *
             *
             *
	         */
	        
	        public function show_Result(){
	        	$order_sn = input('order_sn');
	        	if(empty($order_sn)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '订单编号不能为空!');
                $mapFirs['order_sn'] = $order_sn;
                $mapFirs['delete_time'] = NULL;
                $firsField = 'order_sn,balance_per,is_normal,review_rating,risk_rating,is_material,is_guarantee,is_asset_prove,is_guarantee_estate,is_guarantee_money,is_guarantee_other,guarantee_money,other_way,express_no';
	        	$resTrial = TrialFirst::getOne($mapFirs,$firsField);
                //查询出问题汇总
                if(!empty($resTrial)){
                    $problemMap['order_sn'] = $order_sn;
                    $problemMap['type'] = 'QUESTION';
                    $problemMap['delete_time'] = NULL;
                    $resProblem = TrialData::getAll($problemMap,'id,describe,status');
                    if(!empty($resProblem)) $resTrial['problem'] = $resProblem;
                    //判断是否缺资料通过
                    if($resTrial['is_material'] === 1){
                        $dataMap['order_sn'] = $order_sn;
                        $dataMap['type'] = 'NODATA';
                        $dataMap['delete_time'] = NULL;
                        $resData = TrialData::getAll($dataMap,'id,describe,status');
                        if(!empty($resData)) $resTrial['data'] = $resData;
                    }
                    //判断是否提供房产反担保
                    if($resTrial['is_guarantee'] === 1 && $resTrial['is_guarantee_estate'] === 1){
                        $houseInfo = TrialEstate::show_House_Info($order_sn,1);
                        if(!empty($houseInfo)) $resTrial['houseinfo'] = $houseInfo;
                    }
                    //判断是否提供资产证明
                    if($resTrial['is_asset_prove'] === 1){
                        $assetProof = TrialEstate::show_House_Info($order_sn,2);
                        if(!empty($assetProof)) $resTrial['assetproof'] = $assetProof;
                    }
                }


                return $this->buildSuccess($resTrial);

       }

        // @author 赵光帅
       /**
        * @api {post} admin/Approval/add_Result 初审结果提交[admin/Approval/add_Result]
        * @apiVersion 1.0.0
        * @apiName add_Result
        * @apiGroup Approval
        * @apiSampleRequest admin/Approval/add_Result
        *
        *
        * @apiParam {string}  order_sn   订单编号
        * @apiParam {float}  balance_per   负债成数
        * @apiParam {int}  is_normal   是否正常单
        * @apiParam {int}  review_rating   审查评级
        * @apiParam {int}  risk_rating   风险评级
        * @apiParam {int}  is_material   是否缺资料通过 0未选中  1选中
        * @apiParam {int}  is_guarantee   是否提供反担保 0未选中  1选中
        * @apiParam {int}  is_asset_prove   是否提供资产证明 0未选中  1选中
        * @apiParam {int}  is_guarantee_estate   是否房产反担保 0未选中  1选中
        * @apiParam {int}  is_guarantee_money   是否保证金反担保 0未选中  1选中
        * @apiParam {int}  is_guarantee_other   是否其它方式反担保 0未选中  1选中
        * @apiParam {float}  guarantee_money   反担保 （保证金）
        * @apiParam {string}  other_way   其它方式
        * @apiParam {int}  problem_id     problem(array) => 问题汇总信息 id,新增则这个id可以为空
        * @apiParam {string}  problem_describe    problem(array) => 问题描述
        * @apiParam {int}  problem_status    problem(array) => 问题状态 0未解决 1已解决
        * @apiParam {int}  data_id     data(array) => 缺少的资料 id,新增则这个id为空
        * @apiParam {string}  data_describe    data(array) => 资料描述
        * @apiParam {int}  data_status    data(array) => 资料状态 0未收 1已收
        * @apiParam {array}      houseinfo       (array) => 房产表id
        * @apiParam {array}      assetproof      (array) => 房产表id
        *
        */
	         
	        public function add_Result(){
	        	$orderSn = input('order_sn');
                $balancePer = input('balance_per');
                $isNormal = input('is_normal');
                $reviewRating = input('review_rating');
                $riskRating = input('risk_rating');
                $isMaterial = input('is_material');
                $isGuarantee = input('is_guarantee');
                $isassetProve = input('is_asset_prove');
                $isguaranteeEstate = input('is_guarantee_estate');
                $isGuaranteemoney = input('is_guarantee_money');
                $isGuaranteeother = input('is_guarantee_other');
                $guaranteeMoney = input('guarantee_money');
                $otherWay = input('other_way');
                $proBlem = input('problem');
                $daTa = input('data');
                $houId = input('houseinfo');
                $assetProof = input('assetproof');
                if($isMaterial == 1 && empty($daTa)){
                    return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '资料描述不能为空');
                }
                if($isGuarantee == 1 && $isguaranteeEstate == 1 && empty($houId)){
                    return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '反担保房产选择不能为空');
                }
                if($isGuarantee == 1 && $isGuaranteemoney == 1 && empty($guaranteeMoney)){
                    return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '反担保保证金不能为空');
                }
                if($isGuarantee == 1 && $isGuaranteeother == 1 && empty($otherWay)){
                    return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '反担保其他方式不能为空');
                }
                if($isassetProve == 1 && empty($assetProof)){
                    return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '资产证明不能为空');
                }

                //验证器验证参数
                $valiDate = validate('TrialPrel');
                $data=['order_sn'=>$orderSn,'balance_per'=>$balancePer,'is_normal'=>$isNormal,'review_rating'=>$reviewRating,'risk_rating'=>$riskRating,
                    'is_material'=>$isMaterial,'is_guarantee'=>$isGuarantee,'is_asset_prove'=>$isassetProve,'is_guarantee_estate'=>$isguaranteeEstate,
                    'is_guarantee_money'=>$isGuaranteemoney,'is_guarantee_other'=>$isGuaranteeother,
                    'guarantee_money'=>$guaranteeMoney,'other_way'=>$otherWay];
                if(!$valiDate->check($data)){
                    return $this->buildFailed(ReturnCode::EMPTY_PARAMS, $valiDate->getError());
                }

                // 启动事务
                Db::startTrans();
                try{
                    $firstInfo = TrialFirst::get(['order_sn' => $orderSn]);
                    //判断该订单号对应的初审信息是否已经存在
                    if(!empty($firstInfo)){   //已经存在 编辑记录
                        $firstInfo->balance_per = $balancePer;
                        $firstInfo->is_normal = $isNormal;
                        $firstInfo->review_rating = $reviewRating;
                        $firstInfo->risk_rating = $riskRating;
                        $firstInfo->is_material = $isMaterial;
                        $firstInfo->is_guarantee = $isGuarantee;
                        $firstInfo->is_asset_prove = $isassetProve;
                        $firstInfo->is_guarantee_estate = $isguaranteeEstate;
                        $firstInfo->is_guarantee_money = $isGuaranteemoney;
                        $firstInfo->is_guarantee_other = $isGuaranteeother;
                        if($isGuaranteemoney == 1){
                            $firstInfo->guarantee_money = $guaranteeMoney;
                        }
                        if($isGuaranteeother == 1){
                            $firstInfo->other_way = $otherWay;
                        }

                        //更新初审信息表数据
                        $firstInfo->save();
                        /*$proBlem = array('1'=>array('problem_id' => 17,'problem_describe'=>'1213','problem_status'=>'1'),
                            '2'=>array('problem_id' => 18,'problem_describe'=>'456','problem_status'=>'0'),
                            '3'=>array('problem_describe'=>'帅那个帅789','problem_status'=>'0')
                        );*/
                        //添加或更新问题记录
                        if(!empty($proBlem)){
                            self::update_Problem_Data($proBlem,1,$orderSn,$firstInfo->id);
                        }
                        /*$daTa = array('1'=>array('data_id' => 20,'data_describe'=>'777','data_status'=>'1'),
                            '2'=>array('data_id' => 21,'data_describe'=>'888','data_status'=>'0'),
                            '3'=>array('data_describe'=>'帅那个帅789','data_status'=>'1')
                        );*/
                        //添加或更新缺少的资料
                        if(!empty($daTa) && $isMaterial == 1){
                            self::update_Problem_Data($daTa,2,$orderSn,$firstInfo->id);
                        }
                        //添加反担保
                        //$houId = [1,2,4];
                        if(!empty($houId) && $isGuarantee == 1){
                            self::add_Fans_Danbao($houId,'GUARANTEE',$orderSn,$firstInfo->id);
                        }
                        //$assetProof = [4,5,7];
                        //添加资产证明
                        if(!empty($assetProof) && $isassetProve == 1){
                            self::add_Fans_Danbao($assetProof,'ASSETPROOF',$orderSn,$firstInfo->id);
                        }

                    }else{ //不存在，添加记录
                        $chuShen = [];
                        $chuShen['order_sn'] = $orderSn;
                        $chuShen['balance_per'] = $balancePer;
                        $chuShen['is_normal'] = $isNormal;
                        $chuShen['review_rating'] = $reviewRating;
                        $chuShen['risk_rating'] = $riskRating;
                        $chuShen['is_material'] = $isMaterial;
                        $chuShen['is_guarantee'] = $isGuarantee;
                        $chuShen['is_asset_prove'] = $isassetProve;
                        $chuShen['is_guarantee_estate'] = $isguaranteeEstate;
                        $chuShen['is_guarantee_money'] = $isGuaranteemoney;
                        $chuShen['is_guarantee_other'] = $isGuaranteeother;
                        $chuShen['create_uid'] = 1;
                        $chuShen['create_time'] = time();
                        if($isGuaranteemoney == 1){
                            $chuShen['guarantee_money'] = $guaranteeMoney;
                        }
                        if($isGuaranteeother == 1){
                            $chuShen['other_way'] = $otherWay;
                        }
                        //添加初审信息
                        $addChus = TrialFirst::create($chuShen);
                        //添加问题记录
                        /*$proBlem = array('1'=>array('describe'=>'呵呵1213','status'=>'1'),
                            '2'=>array('describe'=>'呵呵456','status'=>'0'),
                            '3'=>array('describe'=>'呵呵帅那个帅789','status'=>'0')
                        );*/
                        if(!empty($proBlem)){
                              self::add_Problem_Data($proBlem,'QUESTION',$orderSn,$addChus->id);
                        }
                        /*$daTa = array('1'=>array('describe'=>'初审1213','status'=>'1'),
                            '2'=>array('describe'=>'别别别456','status'=>'0'),
                            '3'=>array('describe'=>'呵呵帅那个帅789','status'=>'0')
                        );*/
                        //添加缺少的资料
                        if(!empty($daTa) && $isMaterial == 1){
                              self::add_Problem_Data($daTa,'NODATA',$orderSn,$addChus->id);
                        }
                        //$houId = [1,2,6];
                        //添加反担保
                        if(!empty($houId) && $isGuarantee == 1){
                            self::add_Collateral_assets($houId,'GUARANTEE',$orderSn,$addChus->id);
                        }
                        //$assetProof = [1,2,7];
                        //添加资产证明
                        if(!empty($assetProof) && $isassetProve == 1){
                            self::add_Collateral_assets($assetProof,'ASSETPROOF',$orderSn,$addChus->id);
                        }
                    }

                    // 提交事务
                    Db::commit();
                    return $this->buildSuccess('编辑程功');

                }catch (\Exception $e){
                    // 回滚事务
                    Db::rollback();
                    return $this->buildFailed(ReturnCode::ADD_FAILED, '编辑失败');

                }



	        	
	        	 
	        	 
	        }

            /*
             * @author 赵光帅
             * 更新初审信息时,添加反担保和资产证明的方法
             * @Param {array}  $dataInfo   数据
             * @Param {string}  $type   GUARANTEE 添加反担保 ASSETPROOF 添加资产证明
             * @Param {string}  $orderSn   订单号
             * @Param {int}  $id   订单初审表主键id
             * */
            protected function add_Fans_Danbao($dataInfo,$type,$orderSn,$id){
                foreach ($dataInfo as $k => $v){
                    //判断该订单的该条反担保是否存在
                    $estateInfos = TrialEstate::get(['order_sn' => $orderSn,'delete_time' => NULL,'estate_id' => $v,'type' => $type]);
                    if(empty($estateInfos)){
                        $addDatapross['estate_id'] = $v;
                        $addDatapross['order_sn'] = $orderSn;
                        $addDatapross['type'] = $type;
                        $addDatapross['create_time'] = time();
                        $addDatapross['trial_first_id'] = $id;
                        //添加
                        TrialEstate::create($addDatapross);
                    }

                }
            }

            /*
             * @author 赵光帅
             * 更新订单问题和缺少资料的方法
             * @Param {array}  $dataInfo   数据
             * @Param {int}  $type   ；1 更新问题 2 更新缺少资料
             * @Param {string}  $orderSn   订单号
             * @Param {int}  $id   订单初审表主键id
             * */
            protected function update_Problem_Data($datasInfo,$type,$orderSn,$id){
                if($type === 1){
                    foreach ($datasInfo as $k => $v){
                        if(!empty($v['problem_id'])){  //更新问题
                            $firstsInfos = TrialData::get(['id' => $v['problem_id']]);
                            $firstsInfos->status = $v['problem_status'];
                            $firstsInfos->describe = $v['problem_describe'];
                            $firstsInfos->update_time = time();
                            //更新问题
                            $firstsInfos->save();
                        }else{  //添加问题
                            $addDatapross['describe'] = $v['problem_describe'];
                            $addDatapross['status'] = $v['problem_status'];
                            $addDatapross['order_sn'] = $orderSn;
                            $addDatapross['type'] = 'QUESTION';
                            $addDatapross['create_time'] = time();
                            $addDatapross['trial_first_id'] = $id;
                            //添加
                            TrialData::create($addDatapross);
                        }

                    }
                }else{
                    foreach ($datasInfo as $k => $v){
                        if(!empty($v['data_id'])){ //更新资料
                            $firstsInfos = TrialData::get(['id' => $v['data_id']]);
                            $firstsInfos->status = $v['data_status'];
                            $firstsInfos->describe = $v['data_describe'];
                            $firstsInfos->update_time = time();
                            //更新缺少资料
                            $firstsInfos->save();
                        }else{ //添加资料
                            $addDatapross['describe'] = $v['data_describe'];
                            $addDatapross['status'] = $v['data_status'];
                            $addDatapross['order_sn'] = $orderSn;
                            $addDatapross['type'] = 'NODATA';
                            $addDatapross['create_time'] = time();
                            $addDatapross['trial_first_id'] = $id;
                            //添加
                            TrialData::create($addDatapross);
                        }

                    }
                }

            }

            /*
             * @author 赵光帅
             * 添加反担保和资产证明的方法
             * @Param {array}  $dataInfo   数据
             * @Param {string}  $type   GUARANTEE 添加反担保 ASSETPROOF 添加资产证明
             * @Param {string}  $orderSn   订单号
             * @Param {int}  $id   订单初审表主键id
             * */
            protected function add_Collateral_assets($dataInfo,$type,$orderSn,$id){
                foreach ($dataInfo as $k => $v){
                    $addDatapross['estate_id'] = $v;
                    $addDatapross['order_sn'] = $orderSn;
                    $addDatapross['type'] = $type;
                    $addDatapross['create_time'] = time();
                    $addDatapross['trial_first_id'] = $id;
                    //添加
                    TrialEstate::create($addDatapross);
                }
            }

	        /*
	         * @author 赵光帅
	         * 添加问题和缺少资料的方法
	         * @Param {array}  $dataInfo   数据
	         * @Param {string}  $type   QUESTION 添加问题 NODATA 添加缺少资料
	         * @Param {string}  $orderSn   订单号
	         * @Param {int}  $id   订单初审表主键id
	         * */
	         protected function add_Problem_Data($dataInfo,$type,$orderSn,$id){
                 foreach ($dataInfo as $k => $v){
                     $addDatapross['describe'] = $v['describe'];
                     $addDatapross['status'] = $v['status'];
                     $addDatapross['order_sn'] = $orderSn;
                     $addDatapross['type'] = $type;
                     $addDatapross['create_time'] = time();
                     $addDatapross['trial_first_id'] = $id;
                     //添加
                     TrialData::create($addDatapross);
                 }
             }

             // @author 赵光帅
	        /**
	         * @api {post} admin/Approval/del_Problem 删除问题汇总与缺少资料[admin/Approval/del_Problem]
	         * @apiVersion 1.0.0
	         * @apiName del_Problem
	         * @apiGroup Approval
	         * @apiSampleRequest admin/Approval/del_Problem
	         *
	         *
	         * @apiParam {int}  id   数据的id
	         *
	         */
	        
	        public function del_Problem(){
	        	$id = input('id');
                if(empty($id)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, 'id不能为空!');
                $user = TrialData::get($id);
                $user->status = -1;
                $user->delete_time =time();
                $res = $user->save();
                if($res){
                    return $this->buildSuccess("删除成功");
                }else{
                    return $this->buildFailed(ReturnCode::DELETE_FAILED, '删除失败');
                }

	        
	        	 
	        	 
	        }

             // @author 赵光帅
	        /**
	         * @api {post} admin/Approval/del_Guarantee 删除房产担保与资产证明[admin/Approval/del_Guarantee]
	         * @apiVersion 1.0.0
	         * @apiName del_Guarantee
	         * @apiGroup Approval
	         * @apiSampleRequest admin/Approval/del_Guarantee
	         *
	         *
	         * @apiParam {int}  id   数据的id
	         *
	         *
	         */
	         
	        public function del_Guarantee(){
                $id = input('id');
                if(empty($id)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, 'id不能为空!');
                $user = TrialEstate::get($id);
                $user->status = -1;
                $user->delete_time =time();
                $res = $user->save();
                if($res){
                    return $this->buildSuccess("删除成功");
                }else{
                    return $this->buildFailed(ReturnCode::DELETE_FAILED, '删除失败');
                }
	        	 
	        	 
	        }

	        // @author 赵光帅
	        /**
	         * @api {post} admin/Approval/data_List 缺少的资料列表[admin/Approval/data_List]
	         * @apiVersion 1.0.0
	         * @apiName data_List
	         * @apiGroup Approval
	         * @apiSampleRequest admin/Approval/data_List
	         *
	         *
	         * @apiParam {string}  order_sn   订单编号
	         *
	         * @apiSuccess {string}  describe    资料描述
             * @apiSuccess {int}  status    0未收 1已收
	         */
	         
	        public function data_List(){
	        	$order_sn = input('order_sn');
	        	if(empty($order_sn)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '订单编号不能为空!');
                $trialField = 'id,describe,status';
                $trMap['order_sn'] = $order_sn;
                $trMap['type'] = 'NODATA';
                $trMap['delete_time'] = NULL;
                try{
                    $trialInfo = TrialData::getAll($trMap,$trialField);
                    return $this->buildSuccess($trialInfo);
                }catch (\Exception $e){
                    return $this->buildFailed(ReturnCode::DATA_EXISTS, '查询资料列表失败');
                }

	        	 
	        }

	        // @author 赵光帅
	        /**
	         * @api {post} admin/Approval/add_Data 提交资料[admin/Approval/add_Data]
	         * @apiVersion 1.0.0
	         * @apiName add_Data
	         * @apiGroup Approval
	         * @apiSampleRequest admin/Approval/add_Data
	         *
	         * @apiParam {arr}  datainfo    数组外层键名
	         * @apiParam {string}  describe    资料描述
	         * @apiParam {int}  status    0未收 1已收
             * @apiParam {int}  id    主键id
	         *
	         */
	        
	        public function add_Data(){
	        	$zlInfo = input('datainfo');
                /*$zlInfo = array('1'=>array('id' => 20,'describe'=>'缺少信息','status'=>'1'),
                    '2'=>array('id' => 21,'describe'=>'缺押信息','status'=>'0')
                );*/
	        	if(empty($zlInfo)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '提交信息不能为空!');
	        	try{
                    foreach ($zlInfo as $k => $v){
                        $trialData = TrialData::get($v['id']);
                        $trialData ->describe = $v['describe'];
                        $trialData ->status = $v['status'];
                        $trialData->save();
                    }
                    return $this->buildSuccess('修改成功');
                }catch (\Exception $e){
                    return $this->buildFailed(ReturnCode::UPDATE_FAILED, '修改资料列表失败');
                }

	        	 
	        	 
	        }

             //@author 赵光帅
            /**
             * @api {post} admin/Approval/image_Upload 图片上传[admin/Approval/image_Upload]
             * @apiVersion 1.0.0
             * @apiName image_Upload
             * @apiGroup Approval
             * @apiSampleRequest admin/Approval/image_Upload
             *
             *
             * @apiParam {file}  image   图片文件
             *
             *
             */
	        public function image_Upload(){
	            $file = request()->file('image');
                if(empty($file)) return $this->buildFailed(ReturnCode::EMPTY_PARAMS, '文件不能为空!');
	            $path = ROOT_PATH . 'public' . DS . 'uploads';
                $info = $file->validate(['size'=>9437184,'ext'=>'jpg,png,gif,jpeg,pdf,doc,xls'])->move($path);
                if($info){
                    return $this->buildSuccess('/uploads/'.$info->getSaveName());
                }else{
                    // 上传失败获取错误信息
                    return $this->buildFailed(ReturnCode::FILE_SAVE_ERROR, $file->getError());
                }


            }
	        
	        
}




